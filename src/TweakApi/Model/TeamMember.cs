/* 
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.6-alpha.6
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace TweakApi.Model
{
    /// <summary>
    /// TeamMember
    /// </summary>
    [DataContract]
    public partial class TeamMember :  IEquatable<TeamMember>
    {
        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LanguageEnum
        {
            
            /// <summary>
            /// Enum En for "en"
            /// </summary>
            [EnumMember(Value = "en")]
            En
        }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TimezoneEnum
        {
            
            /// <summary>
            /// Enum AfricaAbidjan for "Africa/Abidjan"
            /// </summary>
            [EnumMember(Value = "Africa/Abidjan")]
            AfricaAbidjan,
            
            /// <summary>
            /// Enum AfricaAccra for "Africa/Accra"
            /// </summary>
            [EnumMember(Value = "Africa/Accra")]
            AfricaAccra,
            
            /// <summary>
            /// Enum AfricaAddisAbaba for "Africa/Addis_Ababa"
            /// </summary>
            [EnumMember(Value = "Africa/Addis_Ababa")]
            AfricaAddisAbaba,
            
            /// <summary>
            /// Enum AfricaAlgiers for "Africa/Algiers"
            /// </summary>
            [EnumMember(Value = "Africa/Algiers")]
            AfricaAlgiers,
            
            /// <summary>
            /// Enum AfricaAsmara for "Africa/Asmara"
            /// </summary>
            [EnumMember(Value = "Africa/Asmara")]
            AfricaAsmara,
            
            /// <summary>
            /// Enum AfricaAsmera for "Africa/Asmera"
            /// </summary>
            [EnumMember(Value = "Africa/Asmera")]
            AfricaAsmera,
            
            /// <summary>
            /// Enum AfricaBamako for "Africa/Bamako"
            /// </summary>
            [EnumMember(Value = "Africa/Bamako")]
            AfricaBamako,
            
            /// <summary>
            /// Enum AfricaBangui for "Africa/Bangui"
            /// </summary>
            [EnumMember(Value = "Africa/Bangui")]
            AfricaBangui,
            
            /// <summary>
            /// Enum AfricaBanjul for "Africa/Banjul"
            /// </summary>
            [EnumMember(Value = "Africa/Banjul")]
            AfricaBanjul,
            
            /// <summary>
            /// Enum AfricaBissau for "Africa/Bissau"
            /// </summary>
            [EnumMember(Value = "Africa/Bissau")]
            AfricaBissau,
            
            /// <summary>
            /// Enum AfricaBlantyre for "Africa/Blantyre"
            /// </summary>
            [EnumMember(Value = "Africa/Blantyre")]
            AfricaBlantyre,
            
            /// <summary>
            /// Enum AfricaBrazzaville for "Africa/Brazzaville"
            /// </summary>
            [EnumMember(Value = "Africa/Brazzaville")]
            AfricaBrazzaville,
            
            /// <summary>
            /// Enum AfricaBujumbura for "Africa/Bujumbura"
            /// </summary>
            [EnumMember(Value = "Africa/Bujumbura")]
            AfricaBujumbura,
            
            /// <summary>
            /// Enum AfricaCairo for "Africa/Cairo"
            /// </summary>
            [EnumMember(Value = "Africa/Cairo")]
            AfricaCairo,
            
            /// <summary>
            /// Enum AfricaCasablanca for "Africa/Casablanca"
            /// </summary>
            [EnumMember(Value = "Africa/Casablanca")]
            AfricaCasablanca,
            
            /// <summary>
            /// Enum AfricaCeuta for "Africa/Ceuta"
            /// </summary>
            [EnumMember(Value = "Africa/Ceuta")]
            AfricaCeuta,
            
            /// <summary>
            /// Enum AfricaConakry for "Africa/Conakry"
            /// </summary>
            [EnumMember(Value = "Africa/Conakry")]
            AfricaConakry,
            
            /// <summary>
            /// Enum AfricaDakar for "Africa/Dakar"
            /// </summary>
            [EnumMember(Value = "Africa/Dakar")]
            AfricaDakar,
            
            /// <summary>
            /// Enum AfricaDaresSalaam for "Africa/Dar_es_Salaam"
            /// </summary>
            [EnumMember(Value = "Africa/Dar_es_Salaam")]
            AfricaDaresSalaam,
            
            /// <summary>
            /// Enum AfricaDjibouti for "Africa/Djibouti"
            /// </summary>
            [EnumMember(Value = "Africa/Djibouti")]
            AfricaDjibouti,
            
            /// <summary>
            /// Enum AfricaDouala for "Africa/Douala"
            /// </summary>
            [EnumMember(Value = "Africa/Douala")]
            AfricaDouala,
            
            /// <summary>
            /// Enum AfricaElAaiun for "Africa/El_Aaiun"
            /// </summary>
            [EnumMember(Value = "Africa/El_Aaiun")]
            AfricaElAaiun,
            
            /// <summary>
            /// Enum AfricaFreetown for "Africa/Freetown"
            /// </summary>
            [EnumMember(Value = "Africa/Freetown")]
            AfricaFreetown,
            
            /// <summary>
            /// Enum AfricaGaborone for "Africa/Gaborone"
            /// </summary>
            [EnumMember(Value = "Africa/Gaborone")]
            AfricaGaborone,
            
            /// <summary>
            /// Enum AfricaHarare for "Africa/Harare"
            /// </summary>
            [EnumMember(Value = "Africa/Harare")]
            AfricaHarare,
            
            /// <summary>
            /// Enum AfricaJohannesburg for "Africa/Johannesburg"
            /// </summary>
            [EnumMember(Value = "Africa/Johannesburg")]
            AfricaJohannesburg,
            
            /// <summary>
            /// Enum AfricaJuba for "Africa/Juba"
            /// </summary>
            [EnumMember(Value = "Africa/Juba")]
            AfricaJuba,
            
            /// <summary>
            /// Enum AfricaKampala for "Africa/Kampala"
            /// </summary>
            [EnumMember(Value = "Africa/Kampala")]
            AfricaKampala,
            
            /// <summary>
            /// Enum AfricaKhartoum for "Africa/Khartoum"
            /// </summary>
            [EnumMember(Value = "Africa/Khartoum")]
            AfricaKhartoum,
            
            /// <summary>
            /// Enum AfricaKigali for "Africa/Kigali"
            /// </summary>
            [EnumMember(Value = "Africa/Kigali")]
            AfricaKigali,
            
            /// <summary>
            /// Enum AfricaKinshasa for "Africa/Kinshasa"
            /// </summary>
            [EnumMember(Value = "Africa/Kinshasa")]
            AfricaKinshasa,
            
            /// <summary>
            /// Enum AfricaLagos for "Africa/Lagos"
            /// </summary>
            [EnumMember(Value = "Africa/Lagos")]
            AfricaLagos,
            
            /// <summary>
            /// Enum AfricaLibreville for "Africa/Libreville"
            /// </summary>
            [EnumMember(Value = "Africa/Libreville")]
            AfricaLibreville,
            
            /// <summary>
            /// Enum AfricaLome for "Africa/Lome"
            /// </summary>
            [EnumMember(Value = "Africa/Lome")]
            AfricaLome,
            
            /// <summary>
            /// Enum AfricaLuanda for "Africa/Luanda"
            /// </summary>
            [EnumMember(Value = "Africa/Luanda")]
            AfricaLuanda,
            
            /// <summary>
            /// Enum AfricaLubumbashi for "Africa/Lubumbashi"
            /// </summary>
            [EnumMember(Value = "Africa/Lubumbashi")]
            AfricaLubumbashi,
            
            /// <summary>
            /// Enum AfricaLusaka for "Africa/Lusaka"
            /// </summary>
            [EnumMember(Value = "Africa/Lusaka")]
            AfricaLusaka,
            
            /// <summary>
            /// Enum AfricaMalabo for "Africa/Malabo"
            /// </summary>
            [EnumMember(Value = "Africa/Malabo")]
            AfricaMalabo,
            
            /// <summary>
            /// Enum AfricaMaputo for "Africa/Maputo"
            /// </summary>
            [EnumMember(Value = "Africa/Maputo")]
            AfricaMaputo,
            
            /// <summary>
            /// Enum AfricaMaseru for "Africa/Maseru"
            /// </summary>
            [EnumMember(Value = "Africa/Maseru")]
            AfricaMaseru,
            
            /// <summary>
            /// Enum AfricaMbabane for "Africa/Mbabane"
            /// </summary>
            [EnumMember(Value = "Africa/Mbabane")]
            AfricaMbabane,
            
            /// <summary>
            /// Enum AfricaMogadishu for "Africa/Mogadishu"
            /// </summary>
            [EnumMember(Value = "Africa/Mogadishu")]
            AfricaMogadishu,
            
            /// <summary>
            /// Enum AfricaMonrovia for "Africa/Monrovia"
            /// </summary>
            [EnumMember(Value = "Africa/Monrovia")]
            AfricaMonrovia,
            
            /// <summary>
            /// Enum AfricaNairobi for "Africa/Nairobi"
            /// </summary>
            [EnumMember(Value = "Africa/Nairobi")]
            AfricaNairobi,
            
            /// <summary>
            /// Enum AfricaNdjamena for "Africa/Ndjamena"
            /// </summary>
            [EnumMember(Value = "Africa/Ndjamena")]
            AfricaNdjamena,
            
            /// <summary>
            /// Enum AfricaNiamey for "Africa/Niamey"
            /// </summary>
            [EnumMember(Value = "Africa/Niamey")]
            AfricaNiamey,
            
            /// <summary>
            /// Enum AfricaNouakchott for "Africa/Nouakchott"
            /// </summary>
            [EnumMember(Value = "Africa/Nouakchott")]
            AfricaNouakchott,
            
            /// <summary>
            /// Enum AfricaOuagadougou for "Africa/Ouagadougou"
            /// </summary>
            [EnumMember(Value = "Africa/Ouagadougou")]
            AfricaOuagadougou,
            
            /// <summary>
            /// Enum AfricaPortoNovo for "Africa/Porto-Novo"
            /// </summary>
            [EnumMember(Value = "Africa/Porto-Novo")]
            AfricaPortoNovo,
            
            /// <summary>
            /// Enum AfricaSaoTome for "Africa/Sao_Tome"
            /// </summary>
            [EnumMember(Value = "Africa/Sao_Tome")]
            AfricaSaoTome,
            
            /// <summary>
            /// Enum AfricaTimbuktu for "Africa/Timbuktu"
            /// </summary>
            [EnumMember(Value = "Africa/Timbuktu")]
            AfricaTimbuktu,
            
            /// <summary>
            /// Enum AfricaTripoli for "Africa/Tripoli"
            /// </summary>
            [EnumMember(Value = "Africa/Tripoli")]
            AfricaTripoli,
            
            /// <summary>
            /// Enum AfricaTunis for "Africa/Tunis"
            /// </summary>
            [EnumMember(Value = "Africa/Tunis")]
            AfricaTunis,
            
            /// <summary>
            /// Enum AfricaWindhoek for "Africa/Windhoek"
            /// </summary>
            [EnumMember(Value = "Africa/Windhoek")]
            AfricaWindhoek,
            
            /// <summary>
            /// Enum AmericaAdak for "America/Adak"
            /// </summary>
            [EnumMember(Value = "America/Adak")]
            AmericaAdak,
            
            /// <summary>
            /// Enum AmericaAnchorage for "America/Anchorage"
            /// </summary>
            [EnumMember(Value = "America/Anchorage")]
            AmericaAnchorage,
            
            /// <summary>
            /// Enum AmericaAnguilla for "America/Anguilla"
            /// </summary>
            [EnumMember(Value = "America/Anguilla")]
            AmericaAnguilla,
            
            /// <summary>
            /// Enum AmericaAntigua for "America/Antigua"
            /// </summary>
            [EnumMember(Value = "America/Antigua")]
            AmericaAntigua,
            
            /// <summary>
            /// Enum AmericaAraguaina for "America/Araguaina"
            /// </summary>
            [EnumMember(Value = "America/Araguaina")]
            AmericaAraguaina,
            
            /// <summary>
            /// Enum AmericaArgentinaBuenosAires for "America/Argentina/Buenos_Aires"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Buenos_Aires")]
            AmericaArgentinaBuenosAires,
            
            /// <summary>
            /// Enum AmericaArgentinaCatamarca for "America/Argentina/Catamarca"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Catamarca")]
            AmericaArgentinaCatamarca,
            
            /// <summary>
            /// Enum AmericaArgentinaComodRivadavia for "America/Argentina/ComodRivadavia"
            /// </summary>
            [EnumMember(Value = "America/Argentina/ComodRivadavia")]
            AmericaArgentinaComodRivadavia,
            
            /// <summary>
            /// Enum AmericaArgentinaCordoba for "America/Argentina/Cordoba"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Cordoba")]
            AmericaArgentinaCordoba,
            
            /// <summary>
            /// Enum AmericaArgentinaJujuy for "America/Argentina/Jujuy"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Jujuy")]
            AmericaArgentinaJujuy,
            
            /// <summary>
            /// Enum AmericaArgentinaLaRioja for "America/Argentina/La_Rioja"
            /// </summary>
            [EnumMember(Value = "America/Argentina/La_Rioja")]
            AmericaArgentinaLaRioja,
            
            /// <summary>
            /// Enum AmericaArgentinaMendoza for "America/Argentina/Mendoza"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Mendoza")]
            AmericaArgentinaMendoza,
            
            /// <summary>
            /// Enum AmericaArgentinaRioGallegos for "America/Argentina/Rio_Gallegos"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Rio_Gallegos")]
            AmericaArgentinaRioGallegos,
            
            /// <summary>
            /// Enum AmericaArgentinaSalta for "America/Argentina/Salta"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Salta")]
            AmericaArgentinaSalta,
            
            /// <summary>
            /// Enum AmericaArgentinaSanJuan for "America/Argentina/San_Juan"
            /// </summary>
            [EnumMember(Value = "America/Argentina/San_Juan")]
            AmericaArgentinaSanJuan,
            
            /// <summary>
            /// Enum AmericaArgentinaSanLuis for "America/Argentina/San_Luis"
            /// </summary>
            [EnumMember(Value = "America/Argentina/San_Luis")]
            AmericaArgentinaSanLuis,
            
            /// <summary>
            /// Enum AmericaArgentinaTucuman for "America/Argentina/Tucuman"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Tucuman")]
            AmericaArgentinaTucuman,
            
            /// <summary>
            /// Enum AmericaArgentinaUshuaia for "America/Argentina/Ushuaia"
            /// </summary>
            [EnumMember(Value = "America/Argentina/Ushuaia")]
            AmericaArgentinaUshuaia,
            
            /// <summary>
            /// Enum AmericaAruba for "America/Aruba"
            /// </summary>
            [EnumMember(Value = "America/Aruba")]
            AmericaAruba,
            
            /// <summary>
            /// Enum AmericaAsuncion for "America/Asuncion"
            /// </summary>
            [EnumMember(Value = "America/Asuncion")]
            AmericaAsuncion,
            
            /// <summary>
            /// Enum AmericaAtikokan for "America/Atikokan"
            /// </summary>
            [EnumMember(Value = "America/Atikokan")]
            AmericaAtikokan,
            
            /// <summary>
            /// Enum AmericaAtka for "America/Atka"
            /// </summary>
            [EnumMember(Value = "America/Atka")]
            AmericaAtka,
            
            /// <summary>
            /// Enum AmericaBahia for "America/Bahia"
            /// </summary>
            [EnumMember(Value = "America/Bahia")]
            AmericaBahia,
            
            /// <summary>
            /// Enum AmericaBahiaBanderas for "America/Bahia_Banderas"
            /// </summary>
            [EnumMember(Value = "America/Bahia_Banderas")]
            AmericaBahiaBanderas,
            
            /// <summary>
            /// Enum AmericaBarbados for "America/Barbados"
            /// </summary>
            [EnumMember(Value = "America/Barbados")]
            AmericaBarbados,
            
            /// <summary>
            /// Enum AmericaBelem for "America/Belem"
            /// </summary>
            [EnumMember(Value = "America/Belem")]
            AmericaBelem,
            
            /// <summary>
            /// Enum AmericaBelize for "America/Belize"
            /// </summary>
            [EnumMember(Value = "America/Belize")]
            AmericaBelize,
            
            /// <summary>
            /// Enum AmericaBlancSablon for "America/Blanc-Sablon"
            /// </summary>
            [EnumMember(Value = "America/Blanc-Sablon")]
            AmericaBlancSablon,
            
            /// <summary>
            /// Enum AmericaBoaVista for "America/Boa_Vista"
            /// </summary>
            [EnumMember(Value = "America/Boa_Vista")]
            AmericaBoaVista,
            
            /// <summary>
            /// Enum AmericaBogota for "America/Bogota"
            /// </summary>
            [EnumMember(Value = "America/Bogota")]
            AmericaBogota,
            
            /// <summary>
            /// Enum AmericaBoise for "America/Boise"
            /// </summary>
            [EnumMember(Value = "America/Boise")]
            AmericaBoise,
            
            /// <summary>
            /// Enum AmericaBuenosAires for "America/Buenos_Aires"
            /// </summary>
            [EnumMember(Value = "America/Buenos_Aires")]
            AmericaBuenosAires,
            
            /// <summary>
            /// Enum AmericaCambridgeBay for "America/Cambridge_Bay"
            /// </summary>
            [EnumMember(Value = "America/Cambridge_Bay")]
            AmericaCambridgeBay,
            
            /// <summary>
            /// Enum AmericaCampoGrande for "America/Campo_Grande"
            /// </summary>
            [EnumMember(Value = "America/Campo_Grande")]
            AmericaCampoGrande,
            
            /// <summary>
            /// Enum AmericaCancun for "America/Cancun"
            /// </summary>
            [EnumMember(Value = "America/Cancun")]
            AmericaCancun,
            
            /// <summary>
            /// Enum AmericaCaracas for "America/Caracas"
            /// </summary>
            [EnumMember(Value = "America/Caracas")]
            AmericaCaracas,
            
            /// <summary>
            /// Enum AmericaCatamarca for "America/Catamarca"
            /// </summary>
            [EnumMember(Value = "America/Catamarca")]
            AmericaCatamarca,
            
            /// <summary>
            /// Enum AmericaCayenne for "America/Cayenne"
            /// </summary>
            [EnumMember(Value = "America/Cayenne")]
            AmericaCayenne,
            
            /// <summary>
            /// Enum AmericaCayman for "America/Cayman"
            /// </summary>
            [EnumMember(Value = "America/Cayman")]
            AmericaCayman,
            
            /// <summary>
            /// Enum AmericaChicago for "America/Chicago"
            /// </summary>
            [EnumMember(Value = "America/Chicago")]
            AmericaChicago,
            
            /// <summary>
            /// Enum AmericaChihuahua for "America/Chihuahua"
            /// </summary>
            [EnumMember(Value = "America/Chihuahua")]
            AmericaChihuahua,
            
            /// <summary>
            /// Enum AmericaCoralHarbour for "America/Coral_Harbour"
            /// </summary>
            [EnumMember(Value = "America/Coral_Harbour")]
            AmericaCoralHarbour,
            
            /// <summary>
            /// Enum AmericaCordoba for "America/Cordoba"
            /// </summary>
            [EnumMember(Value = "America/Cordoba")]
            AmericaCordoba,
            
            /// <summary>
            /// Enum AmericaCostaRica for "America/Costa_Rica"
            /// </summary>
            [EnumMember(Value = "America/Costa_Rica")]
            AmericaCostaRica,
            
            /// <summary>
            /// Enum AmericaCreston for "America/Creston"
            /// </summary>
            [EnumMember(Value = "America/Creston")]
            AmericaCreston,
            
            /// <summary>
            /// Enum AmericaCuiaba for "America/Cuiaba"
            /// </summary>
            [EnumMember(Value = "America/Cuiaba")]
            AmericaCuiaba,
            
            /// <summary>
            /// Enum AmericaCuracao for "America/Curacao"
            /// </summary>
            [EnumMember(Value = "America/Curacao")]
            AmericaCuracao,
            
            /// <summary>
            /// Enum AmericaDanmarkshavn for "America/Danmarkshavn"
            /// </summary>
            [EnumMember(Value = "America/Danmarkshavn")]
            AmericaDanmarkshavn,
            
            /// <summary>
            /// Enum AmericaDawson for "America/Dawson"
            /// </summary>
            [EnumMember(Value = "America/Dawson")]
            AmericaDawson,
            
            /// <summary>
            /// Enum AmericaDawsonCreek for "America/Dawson_Creek"
            /// </summary>
            [EnumMember(Value = "America/Dawson_Creek")]
            AmericaDawsonCreek,
            
            /// <summary>
            /// Enum AmericaDenver for "America/Denver"
            /// </summary>
            [EnumMember(Value = "America/Denver")]
            AmericaDenver,
            
            /// <summary>
            /// Enum AmericaDetroit for "America/Detroit"
            /// </summary>
            [EnumMember(Value = "America/Detroit")]
            AmericaDetroit,
            
            /// <summary>
            /// Enum AmericaDominica for "America/Dominica"
            /// </summary>
            [EnumMember(Value = "America/Dominica")]
            AmericaDominica,
            
            /// <summary>
            /// Enum AmericaEdmonton for "America/Edmonton"
            /// </summary>
            [EnumMember(Value = "America/Edmonton")]
            AmericaEdmonton,
            
            /// <summary>
            /// Enum AmericaEirunepe for "America/Eirunepe"
            /// </summary>
            [EnumMember(Value = "America/Eirunepe")]
            AmericaEirunepe,
            
            /// <summary>
            /// Enum AmericaElSalvador for "America/El_Salvador"
            /// </summary>
            [EnumMember(Value = "America/El_Salvador")]
            AmericaElSalvador,
            
            /// <summary>
            /// Enum AmericaEnsenada for "America/Ensenada"
            /// </summary>
            [EnumMember(Value = "America/Ensenada")]
            AmericaEnsenada,
            
            /// <summary>
            /// Enum AmericaFortNelson for "America/Fort_Nelson"
            /// </summary>
            [EnumMember(Value = "America/Fort_Nelson")]
            AmericaFortNelson,
            
            /// <summary>
            /// Enum AmericaFortWayne for "America/Fort_Wayne"
            /// </summary>
            [EnumMember(Value = "America/Fort_Wayne")]
            AmericaFortWayne,
            
            /// <summary>
            /// Enum AmericaFortaleza for "America/Fortaleza"
            /// </summary>
            [EnumMember(Value = "America/Fortaleza")]
            AmericaFortaleza,
            
            /// <summary>
            /// Enum AmericaGlaceBay for "America/Glace_Bay"
            /// </summary>
            [EnumMember(Value = "America/Glace_Bay")]
            AmericaGlaceBay,
            
            /// <summary>
            /// Enum AmericaGodthab for "America/Godthab"
            /// </summary>
            [EnumMember(Value = "America/Godthab")]
            AmericaGodthab,
            
            /// <summary>
            /// Enum AmericaGooseBay for "America/Goose_Bay"
            /// </summary>
            [EnumMember(Value = "America/Goose_Bay")]
            AmericaGooseBay,
            
            /// <summary>
            /// Enum AmericaGrandTurk for "America/Grand_Turk"
            /// </summary>
            [EnumMember(Value = "America/Grand_Turk")]
            AmericaGrandTurk,
            
            /// <summary>
            /// Enum AmericaGrenada for "America/Grenada"
            /// </summary>
            [EnumMember(Value = "America/Grenada")]
            AmericaGrenada,
            
            /// <summary>
            /// Enum AmericaGuadeloupe for "America/Guadeloupe"
            /// </summary>
            [EnumMember(Value = "America/Guadeloupe")]
            AmericaGuadeloupe,
            
            /// <summary>
            /// Enum AmericaGuatemala for "America/Guatemala"
            /// </summary>
            [EnumMember(Value = "America/Guatemala")]
            AmericaGuatemala,
            
            /// <summary>
            /// Enum AmericaGuayaquil for "America/Guayaquil"
            /// </summary>
            [EnumMember(Value = "America/Guayaquil")]
            AmericaGuayaquil,
            
            /// <summary>
            /// Enum AmericaGuyana for "America/Guyana"
            /// </summary>
            [EnumMember(Value = "America/Guyana")]
            AmericaGuyana,
            
            /// <summary>
            /// Enum AmericaHalifax for "America/Halifax"
            /// </summary>
            [EnumMember(Value = "America/Halifax")]
            AmericaHalifax,
            
            /// <summary>
            /// Enum AmericaHavana for "America/Havana"
            /// </summary>
            [EnumMember(Value = "America/Havana")]
            AmericaHavana,
            
            /// <summary>
            /// Enum AmericaHermosillo for "America/Hermosillo"
            /// </summary>
            [EnumMember(Value = "America/Hermosillo")]
            AmericaHermosillo,
            
            /// <summary>
            /// Enum AmericaIndianaIndianapolis for "America/Indiana/Indianapolis"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Indianapolis")]
            AmericaIndianaIndianapolis,
            
            /// <summary>
            /// Enum AmericaIndianaKnox for "America/Indiana/Knox"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Knox")]
            AmericaIndianaKnox,
            
            /// <summary>
            /// Enum AmericaIndianaMarengo for "America/Indiana/Marengo"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Marengo")]
            AmericaIndianaMarengo,
            
            /// <summary>
            /// Enum AmericaIndianaPetersburg for "America/Indiana/Petersburg"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Petersburg")]
            AmericaIndianaPetersburg,
            
            /// <summary>
            /// Enum AmericaIndianaTellCity for "America/Indiana/Tell_City"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Tell_City")]
            AmericaIndianaTellCity,
            
            /// <summary>
            /// Enum AmericaIndianaVevay for "America/Indiana/Vevay"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Vevay")]
            AmericaIndianaVevay,
            
            /// <summary>
            /// Enum AmericaIndianaVincennes for "America/Indiana/Vincennes"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Vincennes")]
            AmericaIndianaVincennes,
            
            /// <summary>
            /// Enum AmericaIndianaWinamac for "America/Indiana/Winamac"
            /// </summary>
            [EnumMember(Value = "America/Indiana/Winamac")]
            AmericaIndianaWinamac,
            
            /// <summary>
            /// Enum AmericaIndianapolis for "America/Indianapolis"
            /// </summary>
            [EnumMember(Value = "America/Indianapolis")]
            AmericaIndianapolis,
            
            /// <summary>
            /// Enum AmericaInuvik for "America/Inuvik"
            /// </summary>
            [EnumMember(Value = "America/Inuvik")]
            AmericaInuvik,
            
            /// <summary>
            /// Enum AmericaIqaluit for "America/Iqaluit"
            /// </summary>
            [EnumMember(Value = "America/Iqaluit")]
            AmericaIqaluit,
            
            /// <summary>
            /// Enum AmericaJamaica for "America/Jamaica"
            /// </summary>
            [EnumMember(Value = "America/Jamaica")]
            AmericaJamaica,
            
            /// <summary>
            /// Enum AmericaJujuy for "America/Jujuy"
            /// </summary>
            [EnumMember(Value = "America/Jujuy")]
            AmericaJujuy,
            
            /// <summary>
            /// Enum AmericaJuneau for "America/Juneau"
            /// </summary>
            [EnumMember(Value = "America/Juneau")]
            AmericaJuneau,
            
            /// <summary>
            /// Enum AmericaKentuckyLouisville for "America/Kentucky/Louisville"
            /// </summary>
            [EnumMember(Value = "America/Kentucky/Louisville")]
            AmericaKentuckyLouisville,
            
            /// <summary>
            /// Enum AmericaKentuckyMonticello for "America/Kentucky/Monticello"
            /// </summary>
            [EnumMember(Value = "America/Kentucky/Monticello")]
            AmericaKentuckyMonticello,
            
            /// <summary>
            /// Enum AmericaKnoxIN for "America/Knox_IN"
            /// </summary>
            [EnumMember(Value = "America/Knox_IN")]
            AmericaKnoxIN,
            
            /// <summary>
            /// Enum AmericaKralendijk for "America/Kralendijk"
            /// </summary>
            [EnumMember(Value = "America/Kralendijk")]
            AmericaKralendijk,
            
            /// <summary>
            /// Enum AmericaLaPaz for "America/La_Paz"
            /// </summary>
            [EnumMember(Value = "America/La_Paz")]
            AmericaLaPaz,
            
            /// <summary>
            /// Enum AmericaLima for "America/Lima"
            /// </summary>
            [EnumMember(Value = "America/Lima")]
            AmericaLima,
            
            /// <summary>
            /// Enum AmericaLosAngeles for "America/Los_Angeles"
            /// </summary>
            [EnumMember(Value = "America/Los_Angeles")]
            AmericaLosAngeles,
            
            /// <summary>
            /// Enum AmericaLouisville for "America/Louisville"
            /// </summary>
            [EnumMember(Value = "America/Louisville")]
            AmericaLouisville,
            
            /// <summary>
            /// Enum AmericaLowerPrinces for "America/Lower_Princes"
            /// </summary>
            [EnumMember(Value = "America/Lower_Princes")]
            AmericaLowerPrinces,
            
            /// <summary>
            /// Enum AmericaMaceio for "America/Maceio"
            /// </summary>
            [EnumMember(Value = "America/Maceio")]
            AmericaMaceio,
            
            /// <summary>
            /// Enum AmericaManagua for "America/Managua"
            /// </summary>
            [EnumMember(Value = "America/Managua")]
            AmericaManagua,
            
            /// <summary>
            /// Enum AmericaManaus for "America/Manaus"
            /// </summary>
            [EnumMember(Value = "America/Manaus")]
            AmericaManaus,
            
            /// <summary>
            /// Enum AmericaMarigot for "America/Marigot"
            /// </summary>
            [EnumMember(Value = "America/Marigot")]
            AmericaMarigot,
            
            /// <summary>
            /// Enum AmericaMartinique for "America/Martinique"
            /// </summary>
            [EnumMember(Value = "America/Martinique")]
            AmericaMartinique,
            
            /// <summary>
            /// Enum AmericaMatamoros for "America/Matamoros"
            /// </summary>
            [EnumMember(Value = "America/Matamoros")]
            AmericaMatamoros,
            
            /// <summary>
            /// Enum AmericaMazatlan for "America/Mazatlan"
            /// </summary>
            [EnumMember(Value = "America/Mazatlan")]
            AmericaMazatlan,
            
            /// <summary>
            /// Enum AmericaMendoza for "America/Mendoza"
            /// </summary>
            [EnumMember(Value = "America/Mendoza")]
            AmericaMendoza,
            
            /// <summary>
            /// Enum AmericaMenominee for "America/Menominee"
            /// </summary>
            [EnumMember(Value = "America/Menominee")]
            AmericaMenominee,
            
            /// <summary>
            /// Enum AmericaMerida for "America/Merida"
            /// </summary>
            [EnumMember(Value = "America/Merida")]
            AmericaMerida,
            
            /// <summary>
            /// Enum AmericaMetlakatla for "America/Metlakatla"
            /// </summary>
            [EnumMember(Value = "America/Metlakatla")]
            AmericaMetlakatla,
            
            /// <summary>
            /// Enum AmericaMexicoCity for "America/Mexico_City"
            /// </summary>
            [EnumMember(Value = "America/Mexico_City")]
            AmericaMexicoCity,
            
            /// <summary>
            /// Enum AmericaMiquelon for "America/Miquelon"
            /// </summary>
            [EnumMember(Value = "America/Miquelon")]
            AmericaMiquelon,
            
            /// <summary>
            /// Enum AmericaMoncton for "America/Moncton"
            /// </summary>
            [EnumMember(Value = "America/Moncton")]
            AmericaMoncton,
            
            /// <summary>
            /// Enum AmericaMonterrey for "America/Monterrey"
            /// </summary>
            [EnumMember(Value = "America/Monterrey")]
            AmericaMonterrey,
            
            /// <summary>
            /// Enum AmericaMontevideo for "America/Montevideo"
            /// </summary>
            [EnumMember(Value = "America/Montevideo")]
            AmericaMontevideo,
            
            /// <summary>
            /// Enum AmericaMontreal for "America/Montreal"
            /// </summary>
            [EnumMember(Value = "America/Montreal")]
            AmericaMontreal,
            
            /// <summary>
            /// Enum AmericaMontserrat for "America/Montserrat"
            /// </summary>
            [EnumMember(Value = "America/Montserrat")]
            AmericaMontserrat,
            
            /// <summary>
            /// Enum AmericaNassau for "America/Nassau"
            /// </summary>
            [EnumMember(Value = "America/Nassau")]
            AmericaNassau,
            
            /// <summary>
            /// Enum AmericaNewYork for "America/New_York"
            /// </summary>
            [EnumMember(Value = "America/New_York")]
            AmericaNewYork,
            
            /// <summary>
            /// Enum AmericaNipigon for "America/Nipigon"
            /// </summary>
            [EnumMember(Value = "America/Nipigon")]
            AmericaNipigon,
            
            /// <summary>
            /// Enum AmericaNome for "America/Nome"
            /// </summary>
            [EnumMember(Value = "America/Nome")]
            AmericaNome,
            
            /// <summary>
            /// Enum AmericaNoronha for "America/Noronha"
            /// </summary>
            [EnumMember(Value = "America/Noronha")]
            AmericaNoronha,
            
            /// <summary>
            /// Enum AmericaNorthDakotaBeulah for "America/North_Dakota/Beulah"
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/Beulah")]
            AmericaNorthDakotaBeulah,
            
            /// <summary>
            /// Enum AmericaNorthDakotaCenter for "America/North_Dakota/Center"
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/Center")]
            AmericaNorthDakotaCenter,
            
            /// <summary>
            /// Enum AmericaNorthDakotaNewSalem for "America/North_Dakota/New_Salem"
            /// </summary>
            [EnumMember(Value = "America/North_Dakota/New_Salem")]
            AmericaNorthDakotaNewSalem,
            
            /// <summary>
            /// Enum AmericaOjinaga for "America/Ojinaga"
            /// </summary>
            [EnumMember(Value = "America/Ojinaga")]
            AmericaOjinaga,
            
            /// <summary>
            /// Enum AmericaPanama for "America/Panama"
            /// </summary>
            [EnumMember(Value = "America/Panama")]
            AmericaPanama,
            
            /// <summary>
            /// Enum AmericaPangnirtung for "America/Pangnirtung"
            /// </summary>
            [EnumMember(Value = "America/Pangnirtung")]
            AmericaPangnirtung,
            
            /// <summary>
            /// Enum AmericaParamaribo for "America/Paramaribo"
            /// </summary>
            [EnumMember(Value = "America/Paramaribo")]
            AmericaParamaribo,
            
            /// <summary>
            /// Enum AmericaPhoenix for "America/Phoenix"
            /// </summary>
            [EnumMember(Value = "America/Phoenix")]
            AmericaPhoenix,
            
            /// <summary>
            /// Enum AmericaPortauPrince for "America/Port-au-Prince"
            /// </summary>
            [EnumMember(Value = "America/Port-au-Prince")]
            AmericaPortauPrince,
            
            /// <summary>
            /// Enum AmericaPortofSpain for "America/Port_of_Spain"
            /// </summary>
            [EnumMember(Value = "America/Port_of_Spain")]
            AmericaPortofSpain,
            
            /// <summary>
            /// Enum AmericaPortoAcre for "America/Porto_Acre"
            /// </summary>
            [EnumMember(Value = "America/Porto_Acre")]
            AmericaPortoAcre,
            
            /// <summary>
            /// Enum AmericaPortoVelho for "America/Porto_Velho"
            /// </summary>
            [EnumMember(Value = "America/Porto_Velho")]
            AmericaPortoVelho,
            
            /// <summary>
            /// Enum AmericaPuertoRico for "America/Puerto_Rico"
            /// </summary>
            [EnumMember(Value = "America/Puerto_Rico")]
            AmericaPuertoRico,
            
            /// <summary>
            /// Enum AmericaPuntaArenas for "America/Punta_Arenas"
            /// </summary>
            [EnumMember(Value = "America/Punta_Arenas")]
            AmericaPuntaArenas,
            
            /// <summary>
            /// Enum AmericaRainyRiver for "America/Rainy_River"
            /// </summary>
            [EnumMember(Value = "America/Rainy_River")]
            AmericaRainyRiver,
            
            /// <summary>
            /// Enum AmericaRankinInlet for "America/Rankin_Inlet"
            /// </summary>
            [EnumMember(Value = "America/Rankin_Inlet")]
            AmericaRankinInlet,
            
            /// <summary>
            /// Enum AmericaRecife for "America/Recife"
            /// </summary>
            [EnumMember(Value = "America/Recife")]
            AmericaRecife,
            
            /// <summary>
            /// Enum AmericaRegina for "America/Regina"
            /// </summary>
            [EnumMember(Value = "America/Regina")]
            AmericaRegina,
            
            /// <summary>
            /// Enum AmericaResolute for "America/Resolute"
            /// </summary>
            [EnumMember(Value = "America/Resolute")]
            AmericaResolute,
            
            /// <summary>
            /// Enum AmericaRioBranco for "America/Rio_Branco"
            /// </summary>
            [EnumMember(Value = "America/Rio_Branco")]
            AmericaRioBranco,
            
            /// <summary>
            /// Enum AmericaRosario for "America/Rosario"
            /// </summary>
            [EnumMember(Value = "America/Rosario")]
            AmericaRosario,
            
            /// <summary>
            /// Enum AmericaSantaIsabel for "America/Santa_Isabel"
            /// </summary>
            [EnumMember(Value = "America/Santa_Isabel")]
            AmericaSantaIsabel,
            
            /// <summary>
            /// Enum AmericaSantarem for "America/Santarem"
            /// </summary>
            [EnumMember(Value = "America/Santarem")]
            AmericaSantarem,
            
            /// <summary>
            /// Enum AmericaSantiago for "America/Santiago"
            /// </summary>
            [EnumMember(Value = "America/Santiago")]
            AmericaSantiago,
            
            /// <summary>
            /// Enum AmericaSantoDomingo for "America/Santo_Domingo"
            /// </summary>
            [EnumMember(Value = "America/Santo_Domingo")]
            AmericaSantoDomingo,
            
            /// <summary>
            /// Enum AmericaSaoPaulo for "America/Sao_Paulo"
            /// </summary>
            [EnumMember(Value = "America/Sao_Paulo")]
            AmericaSaoPaulo,
            
            /// <summary>
            /// Enum AmericaScoresbysund for "America/Scoresbysund"
            /// </summary>
            [EnumMember(Value = "America/Scoresbysund")]
            AmericaScoresbysund,
            
            /// <summary>
            /// Enum AmericaShiprock for "America/Shiprock"
            /// </summary>
            [EnumMember(Value = "America/Shiprock")]
            AmericaShiprock,
            
            /// <summary>
            /// Enum AmericaSitka for "America/Sitka"
            /// </summary>
            [EnumMember(Value = "America/Sitka")]
            AmericaSitka,
            
            /// <summary>
            /// Enum AmericaStBarthelemy for "America/St_Barthelemy"
            /// </summary>
            [EnumMember(Value = "America/St_Barthelemy")]
            AmericaStBarthelemy,
            
            /// <summary>
            /// Enum AmericaStJohns for "America/St_Johns"
            /// </summary>
            [EnumMember(Value = "America/St_Johns")]
            AmericaStJohns,
            
            /// <summary>
            /// Enum AmericaStKitts for "America/St_Kitts"
            /// </summary>
            [EnumMember(Value = "America/St_Kitts")]
            AmericaStKitts,
            
            /// <summary>
            /// Enum AmericaStLucia for "America/St_Lucia"
            /// </summary>
            [EnumMember(Value = "America/St_Lucia")]
            AmericaStLucia,
            
            /// <summary>
            /// Enum AmericaStThomas for "America/St_Thomas"
            /// </summary>
            [EnumMember(Value = "America/St_Thomas")]
            AmericaStThomas,
            
            /// <summary>
            /// Enum AmericaStVincent for "America/St_Vincent"
            /// </summary>
            [EnumMember(Value = "America/St_Vincent")]
            AmericaStVincent,
            
            /// <summary>
            /// Enum AmericaSwiftCurrent for "America/Swift_Current"
            /// </summary>
            [EnumMember(Value = "America/Swift_Current")]
            AmericaSwiftCurrent,
            
            /// <summary>
            /// Enum AmericaTegucigalpa for "America/Tegucigalpa"
            /// </summary>
            [EnumMember(Value = "America/Tegucigalpa")]
            AmericaTegucigalpa,
            
            /// <summary>
            /// Enum AmericaThule for "America/Thule"
            /// </summary>
            [EnumMember(Value = "America/Thule")]
            AmericaThule,
            
            /// <summary>
            /// Enum AmericaThunderBay for "America/Thunder_Bay"
            /// </summary>
            [EnumMember(Value = "America/Thunder_Bay")]
            AmericaThunderBay,
            
            /// <summary>
            /// Enum AmericaTijuana for "America/Tijuana"
            /// </summary>
            [EnumMember(Value = "America/Tijuana")]
            AmericaTijuana,
            
            /// <summary>
            /// Enum AmericaToronto for "America/Toronto"
            /// </summary>
            [EnumMember(Value = "America/Toronto")]
            AmericaToronto,
            
            /// <summary>
            /// Enum AmericaTortola for "America/Tortola"
            /// </summary>
            [EnumMember(Value = "America/Tortola")]
            AmericaTortola,
            
            /// <summary>
            /// Enum AmericaVancouver for "America/Vancouver"
            /// </summary>
            [EnumMember(Value = "America/Vancouver")]
            AmericaVancouver,
            
            /// <summary>
            /// Enum AmericaVirgin for "America/Virgin"
            /// </summary>
            [EnumMember(Value = "America/Virgin")]
            AmericaVirgin,
            
            /// <summary>
            /// Enum AmericaWhitehorse for "America/Whitehorse"
            /// </summary>
            [EnumMember(Value = "America/Whitehorse")]
            AmericaWhitehorse,
            
            /// <summary>
            /// Enum AmericaWinnipeg for "America/Winnipeg"
            /// </summary>
            [EnumMember(Value = "America/Winnipeg")]
            AmericaWinnipeg,
            
            /// <summary>
            /// Enum AmericaYakutat for "America/Yakutat"
            /// </summary>
            [EnumMember(Value = "America/Yakutat")]
            AmericaYakutat,
            
            /// <summary>
            /// Enum AmericaYellowknife for "America/Yellowknife"
            /// </summary>
            [EnumMember(Value = "America/Yellowknife")]
            AmericaYellowknife,
            
            /// <summary>
            /// Enum AntarcticaCasey for "Antarctica/Casey"
            /// </summary>
            [EnumMember(Value = "Antarctica/Casey")]
            AntarcticaCasey,
            
            /// <summary>
            /// Enum AntarcticaDavis for "Antarctica/Davis"
            /// </summary>
            [EnumMember(Value = "Antarctica/Davis")]
            AntarcticaDavis,
            
            /// <summary>
            /// Enum AntarcticaDumontDUrville for "Antarctica/DumontDUrville"
            /// </summary>
            [EnumMember(Value = "Antarctica/DumontDUrville")]
            AntarcticaDumontDUrville,
            
            /// <summary>
            /// Enum AntarcticaMacquarie for "Antarctica/Macquarie"
            /// </summary>
            [EnumMember(Value = "Antarctica/Macquarie")]
            AntarcticaMacquarie,
            
            /// <summary>
            /// Enum AntarcticaMawson for "Antarctica/Mawson"
            /// </summary>
            [EnumMember(Value = "Antarctica/Mawson")]
            AntarcticaMawson,
            
            /// <summary>
            /// Enum AntarcticaMcMurdo for "Antarctica/McMurdo"
            /// </summary>
            [EnumMember(Value = "Antarctica/McMurdo")]
            AntarcticaMcMurdo,
            
            /// <summary>
            /// Enum AntarcticaPalmer for "Antarctica/Palmer"
            /// </summary>
            [EnumMember(Value = "Antarctica/Palmer")]
            AntarcticaPalmer,
            
            /// <summary>
            /// Enum AntarcticaRothera for "Antarctica/Rothera"
            /// </summary>
            [EnumMember(Value = "Antarctica/Rothera")]
            AntarcticaRothera,
            
            /// <summary>
            /// Enum AntarcticaSouthPole for "Antarctica/South_Pole"
            /// </summary>
            [EnumMember(Value = "Antarctica/South_Pole")]
            AntarcticaSouthPole,
            
            /// <summary>
            /// Enum AntarcticaSyowa for "Antarctica/Syowa"
            /// </summary>
            [EnumMember(Value = "Antarctica/Syowa")]
            AntarcticaSyowa,
            
            /// <summary>
            /// Enum AntarcticaTroll for "Antarctica/Troll"
            /// </summary>
            [EnumMember(Value = "Antarctica/Troll")]
            AntarcticaTroll,
            
            /// <summary>
            /// Enum AntarcticaVostok for "Antarctica/Vostok"
            /// </summary>
            [EnumMember(Value = "Antarctica/Vostok")]
            AntarcticaVostok,
            
            /// <summary>
            /// Enum ArcticLongyearbyen for "Arctic/Longyearbyen"
            /// </summary>
            [EnumMember(Value = "Arctic/Longyearbyen")]
            ArcticLongyearbyen,
            
            /// <summary>
            /// Enum AsiaAden for "Asia/Aden"
            /// </summary>
            [EnumMember(Value = "Asia/Aden")]
            AsiaAden,
            
            /// <summary>
            /// Enum AsiaAlmaty for "Asia/Almaty"
            /// </summary>
            [EnumMember(Value = "Asia/Almaty")]
            AsiaAlmaty,
            
            /// <summary>
            /// Enum AsiaAmman for "Asia/Amman"
            /// </summary>
            [EnumMember(Value = "Asia/Amman")]
            AsiaAmman,
            
            /// <summary>
            /// Enum AsiaAnadyr for "Asia/Anadyr"
            /// </summary>
            [EnumMember(Value = "Asia/Anadyr")]
            AsiaAnadyr,
            
            /// <summary>
            /// Enum AsiaAqtau for "Asia/Aqtau"
            /// </summary>
            [EnumMember(Value = "Asia/Aqtau")]
            AsiaAqtau,
            
            /// <summary>
            /// Enum AsiaAqtobe for "Asia/Aqtobe"
            /// </summary>
            [EnumMember(Value = "Asia/Aqtobe")]
            AsiaAqtobe,
            
            /// <summary>
            /// Enum AsiaAshgabat for "Asia/Ashgabat"
            /// </summary>
            [EnumMember(Value = "Asia/Ashgabat")]
            AsiaAshgabat,
            
            /// <summary>
            /// Enum AsiaAshkhabad for "Asia/Ashkhabad"
            /// </summary>
            [EnumMember(Value = "Asia/Ashkhabad")]
            AsiaAshkhabad,
            
            /// <summary>
            /// Enum AsiaAtyrau for "Asia/Atyrau"
            /// </summary>
            [EnumMember(Value = "Asia/Atyrau")]
            AsiaAtyrau,
            
            /// <summary>
            /// Enum AsiaBaghdad for "Asia/Baghdad"
            /// </summary>
            [EnumMember(Value = "Asia/Baghdad")]
            AsiaBaghdad,
            
            /// <summary>
            /// Enum AsiaBahrain for "Asia/Bahrain"
            /// </summary>
            [EnumMember(Value = "Asia/Bahrain")]
            AsiaBahrain,
            
            /// <summary>
            /// Enum AsiaBaku for "Asia/Baku"
            /// </summary>
            [EnumMember(Value = "Asia/Baku")]
            AsiaBaku,
            
            /// <summary>
            /// Enum AsiaBangkok for "Asia/Bangkok"
            /// </summary>
            [EnumMember(Value = "Asia/Bangkok")]
            AsiaBangkok,
            
            /// <summary>
            /// Enum AsiaBarnaul for "Asia/Barnaul"
            /// </summary>
            [EnumMember(Value = "Asia/Barnaul")]
            AsiaBarnaul,
            
            /// <summary>
            /// Enum AsiaBeirut for "Asia/Beirut"
            /// </summary>
            [EnumMember(Value = "Asia/Beirut")]
            AsiaBeirut,
            
            /// <summary>
            /// Enum AsiaBishkek for "Asia/Bishkek"
            /// </summary>
            [EnumMember(Value = "Asia/Bishkek")]
            AsiaBishkek,
            
            /// <summary>
            /// Enum AsiaBrunei for "Asia/Brunei"
            /// </summary>
            [EnumMember(Value = "Asia/Brunei")]
            AsiaBrunei,
            
            /// <summary>
            /// Enum AsiaCalcutta for "Asia/Calcutta"
            /// </summary>
            [EnumMember(Value = "Asia/Calcutta")]
            AsiaCalcutta,
            
            /// <summary>
            /// Enum AsiaChita for "Asia/Chita"
            /// </summary>
            [EnumMember(Value = "Asia/Chita")]
            AsiaChita,
            
            /// <summary>
            /// Enum AsiaChoibalsan for "Asia/Choibalsan"
            /// </summary>
            [EnumMember(Value = "Asia/Choibalsan")]
            AsiaChoibalsan,
            
            /// <summary>
            /// Enum AsiaChongqing for "Asia/Chongqing"
            /// </summary>
            [EnumMember(Value = "Asia/Chongqing")]
            AsiaChongqing,
            
            /// <summary>
            /// Enum AsiaChungking for "Asia/Chungking"
            /// </summary>
            [EnumMember(Value = "Asia/Chungking")]
            AsiaChungking,
            
            /// <summary>
            /// Enum AsiaColombo for "Asia/Colombo"
            /// </summary>
            [EnumMember(Value = "Asia/Colombo")]
            AsiaColombo,
            
            /// <summary>
            /// Enum AsiaDacca for "Asia/Dacca"
            /// </summary>
            [EnumMember(Value = "Asia/Dacca")]
            AsiaDacca,
            
            /// <summary>
            /// Enum AsiaDamascus for "Asia/Damascus"
            /// </summary>
            [EnumMember(Value = "Asia/Damascus")]
            AsiaDamascus,
            
            /// <summary>
            /// Enum AsiaDhaka for "Asia/Dhaka"
            /// </summary>
            [EnumMember(Value = "Asia/Dhaka")]
            AsiaDhaka,
            
            /// <summary>
            /// Enum AsiaDili for "Asia/Dili"
            /// </summary>
            [EnumMember(Value = "Asia/Dili")]
            AsiaDili,
            
            /// <summary>
            /// Enum AsiaDubai for "Asia/Dubai"
            /// </summary>
            [EnumMember(Value = "Asia/Dubai")]
            AsiaDubai,
            
            /// <summary>
            /// Enum AsiaDushanbe for "Asia/Dushanbe"
            /// </summary>
            [EnumMember(Value = "Asia/Dushanbe")]
            AsiaDushanbe,
            
            /// <summary>
            /// Enum AsiaFamagusta for "Asia/Famagusta"
            /// </summary>
            [EnumMember(Value = "Asia/Famagusta")]
            AsiaFamagusta,
            
            /// <summary>
            /// Enum AsiaGaza for "Asia/Gaza"
            /// </summary>
            [EnumMember(Value = "Asia/Gaza")]
            AsiaGaza,
            
            /// <summary>
            /// Enum AsiaHarbin for "Asia/Harbin"
            /// </summary>
            [EnumMember(Value = "Asia/Harbin")]
            AsiaHarbin,
            
            /// <summary>
            /// Enum AsiaHebron for "Asia/Hebron"
            /// </summary>
            [EnumMember(Value = "Asia/Hebron")]
            AsiaHebron,
            
            /// <summary>
            /// Enum AsiaHoChiMinh for "Asia/Ho_Chi_Minh"
            /// </summary>
            [EnumMember(Value = "Asia/Ho_Chi_Minh")]
            AsiaHoChiMinh,
            
            /// <summary>
            /// Enum AsiaHongKong for "Asia/Hong_Kong"
            /// </summary>
            [EnumMember(Value = "Asia/Hong_Kong")]
            AsiaHongKong,
            
            /// <summary>
            /// Enum AsiaHovd for "Asia/Hovd"
            /// </summary>
            [EnumMember(Value = "Asia/Hovd")]
            AsiaHovd,
            
            /// <summary>
            /// Enum AsiaIrkutsk for "Asia/Irkutsk"
            /// </summary>
            [EnumMember(Value = "Asia/Irkutsk")]
            AsiaIrkutsk,
            
            /// <summary>
            /// Enum AsiaIstanbul for "Asia/Istanbul"
            /// </summary>
            [EnumMember(Value = "Asia/Istanbul")]
            AsiaIstanbul,
            
            /// <summary>
            /// Enum AsiaJakarta for "Asia/Jakarta"
            /// </summary>
            [EnumMember(Value = "Asia/Jakarta")]
            AsiaJakarta,
            
            /// <summary>
            /// Enum AsiaJayapura for "Asia/Jayapura"
            /// </summary>
            [EnumMember(Value = "Asia/Jayapura")]
            AsiaJayapura,
            
            /// <summary>
            /// Enum AsiaJerusalem for "Asia/Jerusalem"
            /// </summary>
            [EnumMember(Value = "Asia/Jerusalem")]
            AsiaJerusalem,
            
            /// <summary>
            /// Enum AsiaKabul for "Asia/Kabul"
            /// </summary>
            [EnumMember(Value = "Asia/Kabul")]
            AsiaKabul,
            
            /// <summary>
            /// Enum AsiaKamchatka for "Asia/Kamchatka"
            /// </summary>
            [EnumMember(Value = "Asia/Kamchatka")]
            AsiaKamchatka,
            
            /// <summary>
            /// Enum AsiaKarachi for "Asia/Karachi"
            /// </summary>
            [EnumMember(Value = "Asia/Karachi")]
            AsiaKarachi,
            
            /// <summary>
            /// Enum AsiaKashgar for "Asia/Kashgar"
            /// </summary>
            [EnumMember(Value = "Asia/Kashgar")]
            AsiaKashgar,
            
            /// <summary>
            /// Enum AsiaKathmandu for "Asia/Kathmandu"
            /// </summary>
            [EnumMember(Value = "Asia/Kathmandu")]
            AsiaKathmandu,
            
            /// <summary>
            /// Enum AsiaKatmandu for "Asia/Katmandu"
            /// </summary>
            [EnumMember(Value = "Asia/Katmandu")]
            AsiaKatmandu,
            
            /// <summary>
            /// Enum AsiaKhandyga for "Asia/Khandyga"
            /// </summary>
            [EnumMember(Value = "Asia/Khandyga")]
            AsiaKhandyga,
            
            /// <summary>
            /// Enum AsiaKolkata for "Asia/Kolkata"
            /// </summary>
            [EnumMember(Value = "Asia/Kolkata")]
            AsiaKolkata,
            
            /// <summary>
            /// Enum AsiaKrasnoyarsk for "Asia/Krasnoyarsk"
            /// </summary>
            [EnumMember(Value = "Asia/Krasnoyarsk")]
            AsiaKrasnoyarsk,
            
            /// <summary>
            /// Enum AsiaKualaLumpur for "Asia/Kuala_Lumpur"
            /// </summary>
            [EnumMember(Value = "Asia/Kuala_Lumpur")]
            AsiaKualaLumpur,
            
            /// <summary>
            /// Enum AsiaKuching for "Asia/Kuching"
            /// </summary>
            [EnumMember(Value = "Asia/Kuching")]
            AsiaKuching,
            
            /// <summary>
            /// Enum AsiaKuwait for "Asia/Kuwait"
            /// </summary>
            [EnumMember(Value = "Asia/Kuwait")]
            AsiaKuwait,
            
            /// <summary>
            /// Enum AsiaMacao for "Asia/Macao"
            /// </summary>
            [EnumMember(Value = "Asia/Macao")]
            AsiaMacao,
            
            /// <summary>
            /// Enum AsiaMacau for "Asia/Macau"
            /// </summary>
            [EnumMember(Value = "Asia/Macau")]
            AsiaMacau,
            
            /// <summary>
            /// Enum AsiaMagadan for "Asia/Magadan"
            /// </summary>
            [EnumMember(Value = "Asia/Magadan")]
            AsiaMagadan,
            
            /// <summary>
            /// Enum AsiaMakassar for "Asia/Makassar"
            /// </summary>
            [EnumMember(Value = "Asia/Makassar")]
            AsiaMakassar,
            
            /// <summary>
            /// Enum AsiaManila for "Asia/Manila"
            /// </summary>
            [EnumMember(Value = "Asia/Manila")]
            AsiaManila,
            
            /// <summary>
            /// Enum AsiaMuscat for "Asia/Muscat"
            /// </summary>
            [EnumMember(Value = "Asia/Muscat")]
            AsiaMuscat,
            
            /// <summary>
            /// Enum AsiaNicosia for "Asia/Nicosia"
            /// </summary>
            [EnumMember(Value = "Asia/Nicosia")]
            AsiaNicosia,
            
            /// <summary>
            /// Enum AsiaNovokuznetsk for "Asia/Novokuznetsk"
            /// </summary>
            [EnumMember(Value = "Asia/Novokuznetsk")]
            AsiaNovokuznetsk,
            
            /// <summary>
            /// Enum AsiaNovosibirsk for "Asia/Novosibirsk"
            /// </summary>
            [EnumMember(Value = "Asia/Novosibirsk")]
            AsiaNovosibirsk,
            
            /// <summary>
            /// Enum AsiaOmsk for "Asia/Omsk"
            /// </summary>
            [EnumMember(Value = "Asia/Omsk")]
            AsiaOmsk,
            
            /// <summary>
            /// Enum AsiaOral for "Asia/Oral"
            /// </summary>
            [EnumMember(Value = "Asia/Oral")]
            AsiaOral,
            
            /// <summary>
            /// Enum AsiaPhnomPenh for "Asia/Phnom_Penh"
            /// </summary>
            [EnumMember(Value = "Asia/Phnom_Penh")]
            AsiaPhnomPenh,
            
            /// <summary>
            /// Enum AsiaPontianak for "Asia/Pontianak"
            /// </summary>
            [EnumMember(Value = "Asia/Pontianak")]
            AsiaPontianak,
            
            /// <summary>
            /// Enum AsiaPyongyang for "Asia/Pyongyang"
            /// </summary>
            [EnumMember(Value = "Asia/Pyongyang")]
            AsiaPyongyang,
            
            /// <summary>
            /// Enum AsiaQatar for "Asia/Qatar"
            /// </summary>
            [EnumMember(Value = "Asia/Qatar")]
            AsiaQatar,
            
            /// <summary>
            /// Enum AsiaQyzylorda for "Asia/Qyzylorda"
            /// </summary>
            [EnumMember(Value = "Asia/Qyzylorda")]
            AsiaQyzylorda,
            
            /// <summary>
            /// Enum AsiaRangoon for "Asia/Rangoon"
            /// </summary>
            [EnumMember(Value = "Asia/Rangoon")]
            AsiaRangoon,
            
            /// <summary>
            /// Enum AsiaRiyadh for "Asia/Riyadh"
            /// </summary>
            [EnumMember(Value = "Asia/Riyadh")]
            AsiaRiyadh,
            
            /// <summary>
            /// Enum AsiaSaigon for "Asia/Saigon"
            /// </summary>
            [EnumMember(Value = "Asia/Saigon")]
            AsiaSaigon,
            
            /// <summary>
            /// Enum AsiaSakhalin for "Asia/Sakhalin"
            /// </summary>
            [EnumMember(Value = "Asia/Sakhalin")]
            AsiaSakhalin,
            
            /// <summary>
            /// Enum AsiaSamarkand for "Asia/Samarkand"
            /// </summary>
            [EnumMember(Value = "Asia/Samarkand")]
            AsiaSamarkand,
            
            /// <summary>
            /// Enum AsiaSeoul for "Asia/Seoul"
            /// </summary>
            [EnumMember(Value = "Asia/Seoul")]
            AsiaSeoul,
            
            /// <summary>
            /// Enum AsiaShanghai for "Asia/Shanghai"
            /// </summary>
            [EnumMember(Value = "Asia/Shanghai")]
            AsiaShanghai,
            
            /// <summary>
            /// Enum AsiaSingapore for "Asia/Singapore"
            /// </summary>
            [EnumMember(Value = "Asia/Singapore")]
            AsiaSingapore,
            
            /// <summary>
            /// Enum AsiaSrednekolymsk for "Asia/Srednekolymsk"
            /// </summary>
            [EnumMember(Value = "Asia/Srednekolymsk")]
            AsiaSrednekolymsk,
            
            /// <summary>
            /// Enum AsiaTaipei for "Asia/Taipei"
            /// </summary>
            [EnumMember(Value = "Asia/Taipei")]
            AsiaTaipei,
            
            /// <summary>
            /// Enum AsiaTashkent for "Asia/Tashkent"
            /// </summary>
            [EnumMember(Value = "Asia/Tashkent")]
            AsiaTashkent,
            
            /// <summary>
            /// Enum AsiaTbilisi for "Asia/Tbilisi"
            /// </summary>
            [EnumMember(Value = "Asia/Tbilisi")]
            AsiaTbilisi,
            
            /// <summary>
            /// Enum AsiaTehran for "Asia/Tehran"
            /// </summary>
            [EnumMember(Value = "Asia/Tehran")]
            AsiaTehran,
            
            /// <summary>
            /// Enum AsiaTelAviv for "Asia/Tel_Aviv"
            /// </summary>
            [EnumMember(Value = "Asia/Tel_Aviv")]
            AsiaTelAviv,
            
            /// <summary>
            /// Enum AsiaThimbu for "Asia/Thimbu"
            /// </summary>
            [EnumMember(Value = "Asia/Thimbu")]
            AsiaThimbu,
            
            /// <summary>
            /// Enum AsiaThimphu for "Asia/Thimphu"
            /// </summary>
            [EnumMember(Value = "Asia/Thimphu")]
            AsiaThimphu,
            
            /// <summary>
            /// Enum AsiaTokyo for "Asia/Tokyo"
            /// </summary>
            [EnumMember(Value = "Asia/Tokyo")]
            AsiaTokyo,
            
            /// <summary>
            /// Enum AsiaTomsk for "Asia/Tomsk"
            /// </summary>
            [EnumMember(Value = "Asia/Tomsk")]
            AsiaTomsk,
            
            /// <summary>
            /// Enum AsiaUjungPandang for "Asia/Ujung_Pandang"
            /// </summary>
            [EnumMember(Value = "Asia/Ujung_Pandang")]
            AsiaUjungPandang,
            
            /// <summary>
            /// Enum AsiaUlaanbaatar for "Asia/Ulaanbaatar"
            /// </summary>
            [EnumMember(Value = "Asia/Ulaanbaatar")]
            AsiaUlaanbaatar,
            
            /// <summary>
            /// Enum AsiaUlanBator for "Asia/Ulan_Bator"
            /// </summary>
            [EnumMember(Value = "Asia/Ulan_Bator")]
            AsiaUlanBator,
            
            /// <summary>
            /// Enum AsiaUrumqi for "Asia/Urumqi"
            /// </summary>
            [EnumMember(Value = "Asia/Urumqi")]
            AsiaUrumqi,
            
            /// <summary>
            /// Enum AsiaUstNera for "Asia/Ust-Nera"
            /// </summary>
            [EnumMember(Value = "Asia/Ust-Nera")]
            AsiaUstNera,
            
            /// <summary>
            /// Enum AsiaVientiane for "Asia/Vientiane"
            /// </summary>
            [EnumMember(Value = "Asia/Vientiane")]
            AsiaVientiane,
            
            /// <summary>
            /// Enum AsiaVladivostok for "Asia/Vladivostok"
            /// </summary>
            [EnumMember(Value = "Asia/Vladivostok")]
            AsiaVladivostok,
            
            /// <summary>
            /// Enum AsiaYakutsk for "Asia/Yakutsk"
            /// </summary>
            [EnumMember(Value = "Asia/Yakutsk")]
            AsiaYakutsk,
            
            /// <summary>
            /// Enum AsiaYangon for "Asia/Yangon"
            /// </summary>
            [EnumMember(Value = "Asia/Yangon")]
            AsiaYangon,
            
            /// <summary>
            /// Enum AsiaYekaterinburg for "Asia/Yekaterinburg"
            /// </summary>
            [EnumMember(Value = "Asia/Yekaterinburg")]
            AsiaYekaterinburg,
            
            /// <summary>
            /// Enum AsiaYerevan for "Asia/Yerevan"
            /// </summary>
            [EnumMember(Value = "Asia/Yerevan")]
            AsiaYerevan,
            
            /// <summary>
            /// Enum AtlanticAzores for "Atlantic/Azores"
            /// </summary>
            [EnumMember(Value = "Atlantic/Azores")]
            AtlanticAzores,
            
            /// <summary>
            /// Enum AtlanticBermuda for "Atlantic/Bermuda"
            /// </summary>
            [EnumMember(Value = "Atlantic/Bermuda")]
            AtlanticBermuda,
            
            /// <summary>
            /// Enum AtlanticCanary for "Atlantic/Canary"
            /// </summary>
            [EnumMember(Value = "Atlantic/Canary")]
            AtlanticCanary,
            
            /// <summary>
            /// Enum AtlanticCapeVerde for "Atlantic/Cape_Verde"
            /// </summary>
            [EnumMember(Value = "Atlantic/Cape_Verde")]
            AtlanticCapeVerde,
            
            /// <summary>
            /// Enum AtlanticFaeroe for "Atlantic/Faeroe"
            /// </summary>
            [EnumMember(Value = "Atlantic/Faeroe")]
            AtlanticFaeroe,
            
            /// <summary>
            /// Enum AtlanticFaroe for "Atlantic/Faroe"
            /// </summary>
            [EnumMember(Value = "Atlantic/Faroe")]
            AtlanticFaroe,
            
            /// <summary>
            /// Enum AtlanticJanMayen for "Atlantic/Jan_Mayen"
            /// </summary>
            [EnumMember(Value = "Atlantic/Jan_Mayen")]
            AtlanticJanMayen,
            
            /// <summary>
            /// Enum AtlanticMadeira for "Atlantic/Madeira"
            /// </summary>
            [EnumMember(Value = "Atlantic/Madeira")]
            AtlanticMadeira,
            
            /// <summary>
            /// Enum AtlanticReykjavik for "Atlantic/Reykjavik"
            /// </summary>
            [EnumMember(Value = "Atlantic/Reykjavik")]
            AtlanticReykjavik,
            
            /// <summary>
            /// Enum AtlanticSouthGeorgia for "Atlantic/South_Georgia"
            /// </summary>
            [EnumMember(Value = "Atlantic/South_Georgia")]
            AtlanticSouthGeorgia,
            
            /// <summary>
            /// Enum AtlanticStHelena for "Atlantic/St_Helena"
            /// </summary>
            [EnumMember(Value = "Atlantic/St_Helena")]
            AtlanticStHelena,
            
            /// <summary>
            /// Enum AtlanticStanley for "Atlantic/Stanley"
            /// </summary>
            [EnumMember(Value = "Atlantic/Stanley")]
            AtlanticStanley,
            
            /// <summary>
            /// Enum AustraliaACT for "Australia/ACT"
            /// </summary>
            [EnumMember(Value = "Australia/ACT")]
            AustraliaACT,
            
            /// <summary>
            /// Enum AustraliaAdelaide for "Australia/Adelaide"
            /// </summary>
            [EnumMember(Value = "Australia/Adelaide")]
            AustraliaAdelaide,
            
            /// <summary>
            /// Enum AustraliaBrisbane for "Australia/Brisbane"
            /// </summary>
            [EnumMember(Value = "Australia/Brisbane")]
            AustraliaBrisbane,
            
            /// <summary>
            /// Enum AustraliaBrokenHill for "Australia/Broken_Hill"
            /// </summary>
            [EnumMember(Value = "Australia/Broken_Hill")]
            AustraliaBrokenHill,
            
            /// <summary>
            /// Enum AustraliaCanberra for "Australia/Canberra"
            /// </summary>
            [EnumMember(Value = "Australia/Canberra")]
            AustraliaCanberra,
            
            /// <summary>
            /// Enum AustraliaCurrie for "Australia/Currie"
            /// </summary>
            [EnumMember(Value = "Australia/Currie")]
            AustraliaCurrie,
            
            /// <summary>
            /// Enum AustraliaDarwin for "Australia/Darwin"
            /// </summary>
            [EnumMember(Value = "Australia/Darwin")]
            AustraliaDarwin,
            
            /// <summary>
            /// Enum AustraliaEucla for "Australia/Eucla"
            /// </summary>
            [EnumMember(Value = "Australia/Eucla")]
            AustraliaEucla,
            
            /// <summary>
            /// Enum AustraliaHobart for "Australia/Hobart"
            /// </summary>
            [EnumMember(Value = "Australia/Hobart")]
            AustraliaHobart,
            
            /// <summary>
            /// Enum AustraliaLHI for "Australia/LHI"
            /// </summary>
            [EnumMember(Value = "Australia/LHI")]
            AustraliaLHI,
            
            /// <summary>
            /// Enum AustraliaLindeman for "Australia/Lindeman"
            /// </summary>
            [EnumMember(Value = "Australia/Lindeman")]
            AustraliaLindeman,
            
            /// <summary>
            /// Enum AustraliaLordHowe for "Australia/Lord_Howe"
            /// </summary>
            [EnumMember(Value = "Australia/Lord_Howe")]
            AustraliaLordHowe,
            
            /// <summary>
            /// Enum AustraliaMelbourne for "Australia/Melbourne"
            /// </summary>
            [EnumMember(Value = "Australia/Melbourne")]
            AustraliaMelbourne,
            
            /// <summary>
            /// Enum AustraliaNSW for "Australia/NSW"
            /// </summary>
            [EnumMember(Value = "Australia/NSW")]
            AustraliaNSW,
            
            /// <summary>
            /// Enum AustraliaNorth for "Australia/North"
            /// </summary>
            [EnumMember(Value = "Australia/North")]
            AustraliaNorth,
            
            /// <summary>
            /// Enum AustraliaPerth for "Australia/Perth"
            /// </summary>
            [EnumMember(Value = "Australia/Perth")]
            AustraliaPerth,
            
            /// <summary>
            /// Enum AustraliaQueensland for "Australia/Queensland"
            /// </summary>
            [EnumMember(Value = "Australia/Queensland")]
            AustraliaQueensland,
            
            /// <summary>
            /// Enum AustraliaSouth for "Australia/South"
            /// </summary>
            [EnumMember(Value = "Australia/South")]
            AustraliaSouth,
            
            /// <summary>
            /// Enum AustraliaSydney for "Australia/Sydney"
            /// </summary>
            [EnumMember(Value = "Australia/Sydney")]
            AustraliaSydney,
            
            /// <summary>
            /// Enum AustraliaTasmania for "Australia/Tasmania"
            /// </summary>
            [EnumMember(Value = "Australia/Tasmania")]
            AustraliaTasmania,
            
            /// <summary>
            /// Enum AustraliaVictoria for "Australia/Victoria"
            /// </summary>
            [EnumMember(Value = "Australia/Victoria")]
            AustraliaVictoria,
            
            /// <summary>
            /// Enum AustraliaWest for "Australia/West"
            /// </summary>
            [EnumMember(Value = "Australia/West")]
            AustraliaWest,
            
            /// <summary>
            /// Enum AustraliaYancowinna for "Australia/Yancowinna"
            /// </summary>
            [EnumMember(Value = "Australia/Yancowinna")]
            AustraliaYancowinna,
            
            /// <summary>
            /// Enum BrazilAcre for "Brazil/Acre"
            /// </summary>
            [EnumMember(Value = "Brazil/Acre")]
            BrazilAcre,
            
            /// <summary>
            /// Enum BrazilDeNoronha for "Brazil/DeNoronha"
            /// </summary>
            [EnumMember(Value = "Brazil/DeNoronha")]
            BrazilDeNoronha,
            
            /// <summary>
            /// Enum BrazilEast for "Brazil/East"
            /// </summary>
            [EnumMember(Value = "Brazil/East")]
            BrazilEast,
            
            /// <summary>
            /// Enum BrazilWest for "Brazil/West"
            /// </summary>
            [EnumMember(Value = "Brazil/West")]
            BrazilWest,
            
            /// <summary>
            /// Enum CET for "CET"
            /// </summary>
            [EnumMember(Value = "CET")]
            CET,
            
            /// <summary>
            /// Enum CST6CDT for "CST6CDT"
            /// </summary>
            [EnumMember(Value = "CST6CDT")]
            CST6CDT,
            
            /// <summary>
            /// Enum CanadaAtlantic for "Canada/Atlantic"
            /// </summary>
            [EnumMember(Value = "Canada/Atlantic")]
            CanadaAtlantic,
            
            /// <summary>
            /// Enum CanadaCentral for "Canada/Central"
            /// </summary>
            [EnumMember(Value = "Canada/Central")]
            CanadaCentral,
            
            /// <summary>
            /// Enum CanadaEastSaskatchewan for "Canada/East-Saskatchewan"
            /// </summary>
            [EnumMember(Value = "Canada/East-Saskatchewan")]
            CanadaEastSaskatchewan,
            
            /// <summary>
            /// Enum CanadaEastern for "Canada/Eastern"
            /// </summary>
            [EnumMember(Value = "Canada/Eastern")]
            CanadaEastern,
            
            /// <summary>
            /// Enum CanadaMountain for "Canada/Mountain"
            /// </summary>
            [EnumMember(Value = "Canada/Mountain")]
            CanadaMountain,
            
            /// <summary>
            /// Enum CanadaNewfoundland for "Canada/Newfoundland"
            /// </summary>
            [EnumMember(Value = "Canada/Newfoundland")]
            CanadaNewfoundland,
            
            /// <summary>
            /// Enum CanadaPacific for "Canada/Pacific"
            /// </summary>
            [EnumMember(Value = "Canada/Pacific")]
            CanadaPacific,
            
            /// <summary>
            /// Enum CanadaSaskatchewan for "Canada/Saskatchewan"
            /// </summary>
            [EnumMember(Value = "Canada/Saskatchewan")]
            CanadaSaskatchewan,
            
            /// <summary>
            /// Enum CanadaYukon for "Canada/Yukon"
            /// </summary>
            [EnumMember(Value = "Canada/Yukon")]
            CanadaYukon,
            
            /// <summary>
            /// Enum ChileContinental for "Chile/Continental"
            /// </summary>
            [EnumMember(Value = "Chile/Continental")]
            ChileContinental,
            
            /// <summary>
            /// Enum ChileEasterIsland for "Chile/EasterIsland"
            /// </summary>
            [EnumMember(Value = "Chile/EasterIsland")]
            ChileEasterIsland,
            
            /// <summary>
            /// Enum Cuba for "Cuba"
            /// </summary>
            [EnumMember(Value = "Cuba")]
            Cuba,
            
            /// <summary>
            /// Enum EET for "EET"
            /// </summary>
            [EnumMember(Value = "EET")]
            EET,
            
            /// <summary>
            /// Enum EST for "EST"
            /// </summary>
            [EnumMember(Value = "EST")]
            EST,
            
            /// <summary>
            /// Enum EST5EDT for "EST5EDT"
            /// </summary>
            [EnumMember(Value = "EST5EDT")]
            EST5EDT,
            
            /// <summary>
            /// Enum Egypt for "Egypt"
            /// </summary>
            [EnumMember(Value = "Egypt")]
            Egypt,
            
            /// <summary>
            /// Enum Eire for "Eire"
            /// </summary>
            [EnumMember(Value = "Eire")]
            Eire,
            
            /// <summary>
            /// Enum EtcGMT for "Etc/GMT"
            /// </summary>
            [EnumMember(Value = "Etc/GMT")]
            EtcGMT,
            
            /// <summary>
            /// Enum EtcGMT0 for "Etc/GMT+0"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+0")]
            EtcGMT0,
            
            /// <summary>
            /// Enum EtcGMT1 for "Etc/GMT+1"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+1")]
            EtcGMT1,
            
            /// <summary>
            /// Enum EtcGMT10 for "Etc/GMT+10"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+10")]
            EtcGMT10,
            
            /// <summary>
            /// Enum EtcGMT11 for "Etc/GMT+11"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+11")]
            EtcGMT11,
            
            /// <summary>
            /// Enum EtcGMT12 for "Etc/GMT+12"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+12")]
            EtcGMT12,
            
            /// <summary>
            /// Enum EtcGMT2 for "Etc/GMT+2"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+2")]
            EtcGMT2,
            
            /// <summary>
            /// Enum EtcGMT3 for "Etc/GMT+3"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+3")]
            EtcGMT3,
            
            /// <summary>
            /// Enum EtcGMT4 for "Etc/GMT+4"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+4")]
            EtcGMT4,
            
            /// <summary>
            /// Enum EtcGMT5 for "Etc/GMT+5"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+5")]
            EtcGMT5,
            
            /// <summary>
            /// Enum EtcGMT6 for "Etc/GMT+6"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+6")]
            EtcGMT6,
            
            /// <summary>
            /// Enum EtcGMT7 for "Etc/GMT+7"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+7")]
            EtcGMT7,
            
            /// <summary>
            /// Enum EtcGMT8 for "Etc/GMT+8"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+8")]
            EtcGMT8,
            
            /// <summary>
            /// Enum EtcGMT9 for "Etc/GMT+9"
            /// </summary>
            [EnumMember(Value = "Etc/GMT+9")]
            EtcGMT9,
            
            /// <summary>
            /// Enum EtcGMT0 for "Etc/GMT-0"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-0")]
            EtcGMT0,
            
            /// <summary>
            /// Enum EtcGMT1 for "Etc/GMT-1"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-1")]
            EtcGMT1,
            
            /// <summary>
            /// Enum EtcGMT10 for "Etc/GMT-10"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-10")]
            EtcGMT10,
            
            /// <summary>
            /// Enum EtcGMT11 for "Etc/GMT-11"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-11")]
            EtcGMT11,
            
            /// <summary>
            /// Enum EtcGMT12 for "Etc/GMT-12"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-12")]
            EtcGMT12,
            
            /// <summary>
            /// Enum EtcGMT13 for "Etc/GMT-13"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-13")]
            EtcGMT13,
            
            /// <summary>
            /// Enum EtcGMT14 for "Etc/GMT-14"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-14")]
            EtcGMT14,
            
            /// <summary>
            /// Enum EtcGMT2 for "Etc/GMT-2"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-2")]
            EtcGMT2,
            
            /// <summary>
            /// Enum EtcGMT3 for "Etc/GMT-3"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-3")]
            EtcGMT3,
            
            /// <summary>
            /// Enum EtcGMT4 for "Etc/GMT-4"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-4")]
            EtcGMT4,
            
            /// <summary>
            /// Enum EtcGMT5 for "Etc/GMT-5"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-5")]
            EtcGMT5,
            
            /// <summary>
            /// Enum EtcGMT6 for "Etc/GMT-6"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-6")]
            EtcGMT6,
            
            /// <summary>
            /// Enum EtcGMT7 for "Etc/GMT-7"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-7")]
            EtcGMT7,
            
            /// <summary>
            /// Enum EtcGMT8 for "Etc/GMT-8"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-8")]
            EtcGMT8,
            
            /// <summary>
            /// Enum EtcGMT9 for "Etc/GMT-9"
            /// </summary>
            [EnumMember(Value = "Etc/GMT-9")]
            EtcGMT9,
            
            /// <summary>
            /// Enum EtcGMT0 for "Etc/GMT0"
            /// </summary>
            [EnumMember(Value = "Etc/GMT0")]
            EtcGMT0,
            
            /// <summary>
            /// Enum EtcGreenwich for "Etc/Greenwich"
            /// </summary>
            [EnumMember(Value = "Etc/Greenwich")]
            EtcGreenwich,
            
            /// <summary>
            /// Enum EtcUCT for "Etc/UCT"
            /// </summary>
            [EnumMember(Value = "Etc/UCT")]
            EtcUCT,
            
            /// <summary>
            /// Enum EtcUTC for "Etc/UTC"
            /// </summary>
            [EnumMember(Value = "Etc/UTC")]
            EtcUTC,
            
            /// <summary>
            /// Enum EtcUniversal for "Etc/Universal"
            /// </summary>
            [EnumMember(Value = "Etc/Universal")]
            EtcUniversal,
            
            /// <summary>
            /// Enum EtcZulu for "Etc/Zulu"
            /// </summary>
            [EnumMember(Value = "Etc/Zulu")]
            EtcZulu,
            
            /// <summary>
            /// Enum EuropeAmsterdam for "Europe/Amsterdam"
            /// </summary>
            [EnumMember(Value = "Europe/Amsterdam")]
            EuropeAmsterdam,
            
            /// <summary>
            /// Enum EuropeAndorra for "Europe/Andorra"
            /// </summary>
            [EnumMember(Value = "Europe/Andorra")]
            EuropeAndorra,
            
            /// <summary>
            /// Enum EuropeAstrakhan for "Europe/Astrakhan"
            /// </summary>
            [EnumMember(Value = "Europe/Astrakhan")]
            EuropeAstrakhan,
            
            /// <summary>
            /// Enum EuropeAthens for "Europe/Athens"
            /// </summary>
            [EnumMember(Value = "Europe/Athens")]
            EuropeAthens,
            
            /// <summary>
            /// Enum EuropeBelfast for "Europe/Belfast"
            /// </summary>
            [EnumMember(Value = "Europe/Belfast")]
            EuropeBelfast,
            
            /// <summary>
            /// Enum EuropeBelgrade for "Europe/Belgrade"
            /// </summary>
            [EnumMember(Value = "Europe/Belgrade")]
            EuropeBelgrade,
            
            /// <summary>
            /// Enum EuropeBerlin for "Europe/Berlin"
            /// </summary>
            [EnumMember(Value = "Europe/Berlin")]
            EuropeBerlin,
            
            /// <summary>
            /// Enum EuropeBratislava for "Europe/Bratislava"
            /// </summary>
            [EnumMember(Value = "Europe/Bratislava")]
            EuropeBratislava,
            
            /// <summary>
            /// Enum EuropeBrussels for "Europe/Brussels"
            /// </summary>
            [EnumMember(Value = "Europe/Brussels")]
            EuropeBrussels,
            
            /// <summary>
            /// Enum EuropeBucharest for "Europe/Bucharest"
            /// </summary>
            [EnumMember(Value = "Europe/Bucharest")]
            EuropeBucharest,
            
            /// <summary>
            /// Enum EuropeBudapest for "Europe/Budapest"
            /// </summary>
            [EnumMember(Value = "Europe/Budapest")]
            EuropeBudapest,
            
            /// <summary>
            /// Enum EuropeBusingen for "Europe/Busingen"
            /// </summary>
            [EnumMember(Value = "Europe/Busingen")]
            EuropeBusingen,
            
            /// <summary>
            /// Enum EuropeChisinau for "Europe/Chisinau"
            /// </summary>
            [EnumMember(Value = "Europe/Chisinau")]
            EuropeChisinau,
            
            /// <summary>
            /// Enum EuropeCopenhagen for "Europe/Copenhagen"
            /// </summary>
            [EnumMember(Value = "Europe/Copenhagen")]
            EuropeCopenhagen,
            
            /// <summary>
            /// Enum EuropeDublin for "Europe/Dublin"
            /// </summary>
            [EnumMember(Value = "Europe/Dublin")]
            EuropeDublin,
            
            /// <summary>
            /// Enum EuropeGibraltar for "Europe/Gibraltar"
            /// </summary>
            [EnumMember(Value = "Europe/Gibraltar")]
            EuropeGibraltar,
            
            /// <summary>
            /// Enum EuropeGuernsey for "Europe/Guernsey"
            /// </summary>
            [EnumMember(Value = "Europe/Guernsey")]
            EuropeGuernsey,
            
            /// <summary>
            /// Enum EuropeHelsinki for "Europe/Helsinki"
            /// </summary>
            [EnumMember(Value = "Europe/Helsinki")]
            EuropeHelsinki,
            
            /// <summary>
            /// Enum EuropeIsleofMan for "Europe/Isle_of_Man"
            /// </summary>
            [EnumMember(Value = "Europe/Isle_of_Man")]
            EuropeIsleofMan,
            
            /// <summary>
            /// Enum EuropeIstanbul for "Europe/Istanbul"
            /// </summary>
            [EnumMember(Value = "Europe/Istanbul")]
            EuropeIstanbul,
            
            /// <summary>
            /// Enum EuropeJersey for "Europe/Jersey"
            /// </summary>
            [EnumMember(Value = "Europe/Jersey")]
            EuropeJersey,
            
            /// <summary>
            /// Enum EuropeKaliningrad for "Europe/Kaliningrad"
            /// </summary>
            [EnumMember(Value = "Europe/Kaliningrad")]
            EuropeKaliningrad,
            
            /// <summary>
            /// Enum EuropeKiev for "Europe/Kiev"
            /// </summary>
            [EnumMember(Value = "Europe/Kiev")]
            EuropeKiev,
            
            /// <summary>
            /// Enum EuropeKirov for "Europe/Kirov"
            /// </summary>
            [EnumMember(Value = "Europe/Kirov")]
            EuropeKirov,
            
            /// <summary>
            /// Enum EuropeLisbon for "Europe/Lisbon"
            /// </summary>
            [EnumMember(Value = "Europe/Lisbon")]
            EuropeLisbon,
            
            /// <summary>
            /// Enum EuropeLjubljana for "Europe/Ljubljana"
            /// </summary>
            [EnumMember(Value = "Europe/Ljubljana")]
            EuropeLjubljana,
            
            /// <summary>
            /// Enum EuropeLondon for "Europe/London"
            /// </summary>
            [EnumMember(Value = "Europe/London")]
            EuropeLondon,
            
            /// <summary>
            /// Enum EuropeLuxembourg for "Europe/Luxembourg"
            /// </summary>
            [EnumMember(Value = "Europe/Luxembourg")]
            EuropeLuxembourg,
            
            /// <summary>
            /// Enum EuropeMadrid for "Europe/Madrid"
            /// </summary>
            [EnumMember(Value = "Europe/Madrid")]
            EuropeMadrid,
            
            /// <summary>
            /// Enum EuropeMalta for "Europe/Malta"
            /// </summary>
            [EnumMember(Value = "Europe/Malta")]
            EuropeMalta,
            
            /// <summary>
            /// Enum EuropeMariehamn for "Europe/Mariehamn"
            /// </summary>
            [EnumMember(Value = "Europe/Mariehamn")]
            EuropeMariehamn,
            
            /// <summary>
            /// Enum EuropeMinsk for "Europe/Minsk"
            /// </summary>
            [EnumMember(Value = "Europe/Minsk")]
            EuropeMinsk,
            
            /// <summary>
            /// Enum EuropeMonaco for "Europe/Monaco"
            /// </summary>
            [EnumMember(Value = "Europe/Monaco")]
            EuropeMonaco,
            
            /// <summary>
            /// Enum EuropeMoscow for "Europe/Moscow"
            /// </summary>
            [EnumMember(Value = "Europe/Moscow")]
            EuropeMoscow,
            
            /// <summary>
            /// Enum EuropeNicosia for "Europe/Nicosia"
            /// </summary>
            [EnumMember(Value = "Europe/Nicosia")]
            EuropeNicosia,
            
            /// <summary>
            /// Enum EuropeOslo for "Europe/Oslo"
            /// </summary>
            [EnumMember(Value = "Europe/Oslo")]
            EuropeOslo,
            
            /// <summary>
            /// Enum EuropeParis for "Europe/Paris"
            /// </summary>
            [EnumMember(Value = "Europe/Paris")]
            EuropeParis,
            
            /// <summary>
            /// Enum EuropePodgorica for "Europe/Podgorica"
            /// </summary>
            [EnumMember(Value = "Europe/Podgorica")]
            EuropePodgorica,
            
            /// <summary>
            /// Enum EuropePrague for "Europe/Prague"
            /// </summary>
            [EnumMember(Value = "Europe/Prague")]
            EuropePrague,
            
            /// <summary>
            /// Enum EuropeRiga for "Europe/Riga"
            /// </summary>
            [EnumMember(Value = "Europe/Riga")]
            EuropeRiga,
            
            /// <summary>
            /// Enum EuropeRome for "Europe/Rome"
            /// </summary>
            [EnumMember(Value = "Europe/Rome")]
            EuropeRome,
            
            /// <summary>
            /// Enum EuropeSamara for "Europe/Samara"
            /// </summary>
            [EnumMember(Value = "Europe/Samara")]
            EuropeSamara,
            
            /// <summary>
            /// Enum EuropeSanMarino for "Europe/San_Marino"
            /// </summary>
            [EnumMember(Value = "Europe/San_Marino")]
            EuropeSanMarino,
            
            /// <summary>
            /// Enum EuropeSarajevo for "Europe/Sarajevo"
            /// </summary>
            [EnumMember(Value = "Europe/Sarajevo")]
            EuropeSarajevo,
            
            /// <summary>
            /// Enum EuropeSaratov for "Europe/Saratov"
            /// </summary>
            [EnumMember(Value = "Europe/Saratov")]
            EuropeSaratov,
            
            /// <summary>
            /// Enum EuropeSimferopol for "Europe/Simferopol"
            /// </summary>
            [EnumMember(Value = "Europe/Simferopol")]
            EuropeSimferopol,
            
            /// <summary>
            /// Enum EuropeSkopje for "Europe/Skopje"
            /// </summary>
            [EnumMember(Value = "Europe/Skopje")]
            EuropeSkopje,
            
            /// <summary>
            /// Enum EuropeSofia for "Europe/Sofia"
            /// </summary>
            [EnumMember(Value = "Europe/Sofia")]
            EuropeSofia,
            
            /// <summary>
            /// Enum EuropeStockholm for "Europe/Stockholm"
            /// </summary>
            [EnumMember(Value = "Europe/Stockholm")]
            EuropeStockholm,
            
            /// <summary>
            /// Enum EuropeTallinn for "Europe/Tallinn"
            /// </summary>
            [EnumMember(Value = "Europe/Tallinn")]
            EuropeTallinn,
            
            /// <summary>
            /// Enum EuropeTirane for "Europe/Tirane"
            /// </summary>
            [EnumMember(Value = "Europe/Tirane")]
            EuropeTirane,
            
            /// <summary>
            /// Enum EuropeTiraspol for "Europe/Tiraspol"
            /// </summary>
            [EnumMember(Value = "Europe/Tiraspol")]
            EuropeTiraspol,
            
            /// <summary>
            /// Enum EuropeUlyanovsk for "Europe/Ulyanovsk"
            /// </summary>
            [EnumMember(Value = "Europe/Ulyanovsk")]
            EuropeUlyanovsk,
            
            /// <summary>
            /// Enum EuropeUzhgorod for "Europe/Uzhgorod"
            /// </summary>
            [EnumMember(Value = "Europe/Uzhgorod")]
            EuropeUzhgorod,
            
            /// <summary>
            /// Enum EuropeVaduz for "Europe/Vaduz"
            /// </summary>
            [EnumMember(Value = "Europe/Vaduz")]
            EuropeVaduz,
            
            /// <summary>
            /// Enum EuropeVatican for "Europe/Vatican"
            /// </summary>
            [EnumMember(Value = "Europe/Vatican")]
            EuropeVatican,
            
            /// <summary>
            /// Enum EuropeVienna for "Europe/Vienna"
            /// </summary>
            [EnumMember(Value = "Europe/Vienna")]
            EuropeVienna,
            
            /// <summary>
            /// Enum EuropeVilnius for "Europe/Vilnius"
            /// </summary>
            [EnumMember(Value = "Europe/Vilnius")]
            EuropeVilnius,
            
            /// <summary>
            /// Enum EuropeVolgograd for "Europe/Volgograd"
            /// </summary>
            [EnumMember(Value = "Europe/Volgograd")]
            EuropeVolgograd,
            
            /// <summary>
            /// Enum EuropeWarsaw for "Europe/Warsaw"
            /// </summary>
            [EnumMember(Value = "Europe/Warsaw")]
            EuropeWarsaw,
            
            /// <summary>
            /// Enum EuropeZagreb for "Europe/Zagreb"
            /// </summary>
            [EnumMember(Value = "Europe/Zagreb")]
            EuropeZagreb,
            
            /// <summary>
            /// Enum EuropeZaporozhye for "Europe/Zaporozhye"
            /// </summary>
            [EnumMember(Value = "Europe/Zaporozhye")]
            EuropeZaporozhye,
            
            /// <summary>
            /// Enum EuropeZurich for "Europe/Zurich"
            /// </summary>
            [EnumMember(Value = "Europe/Zurich")]
            EuropeZurich,
            
            /// <summary>
            /// Enum GB for "GB"
            /// </summary>
            [EnumMember(Value = "GB")]
            GB,
            
            /// <summary>
            /// Enum GBEire for "GB-Eire"
            /// </summary>
            [EnumMember(Value = "GB-Eire")]
            GBEire,
            
            /// <summary>
            /// Enum GMT for "GMT"
            /// </summary>
            [EnumMember(Value = "GMT")]
            GMT,
            
            /// <summary>
            /// Enum GMT0 for "GMT+0"
            /// </summary>
            [EnumMember(Value = "GMT+0")]
            GMT0,
            
            /// <summary>
            /// Enum GMT0 for "GMT-0"
            /// </summary>
            [EnumMember(Value = "GMT-0")]
            GMT0,
            
            /// <summary>
            /// Enum GMT0 for "GMT0"
            /// </summary>
            [EnumMember(Value = "GMT0")]
            GMT0,
            
            /// <summary>
            /// Enum Greenwich for "Greenwich"
            /// </summary>
            [EnumMember(Value = "Greenwich")]
            Greenwich,
            
            /// <summary>
            /// Enum HST for "HST"
            /// </summary>
            [EnumMember(Value = "HST")]
            HST,
            
            /// <summary>
            /// Enum Hongkong for "Hongkong"
            /// </summary>
            [EnumMember(Value = "Hongkong")]
            Hongkong,
            
            /// <summary>
            /// Enum Iceland for "Iceland"
            /// </summary>
            [EnumMember(Value = "Iceland")]
            Iceland,
            
            /// <summary>
            /// Enum IndianAntananarivo for "Indian/Antananarivo"
            /// </summary>
            [EnumMember(Value = "Indian/Antananarivo")]
            IndianAntananarivo,
            
            /// <summary>
            /// Enum IndianChagos for "Indian/Chagos"
            /// </summary>
            [EnumMember(Value = "Indian/Chagos")]
            IndianChagos,
            
            /// <summary>
            /// Enum IndianChristmas for "Indian/Christmas"
            /// </summary>
            [EnumMember(Value = "Indian/Christmas")]
            IndianChristmas,
            
            /// <summary>
            /// Enum IndianCocos for "Indian/Cocos"
            /// </summary>
            [EnumMember(Value = "Indian/Cocos")]
            IndianCocos,
            
            /// <summary>
            /// Enum IndianComoro for "Indian/Comoro"
            /// </summary>
            [EnumMember(Value = "Indian/Comoro")]
            IndianComoro,
            
            /// <summary>
            /// Enum IndianKerguelen for "Indian/Kerguelen"
            /// </summary>
            [EnumMember(Value = "Indian/Kerguelen")]
            IndianKerguelen,
            
            /// <summary>
            /// Enum IndianMahe for "Indian/Mahe"
            /// </summary>
            [EnumMember(Value = "Indian/Mahe")]
            IndianMahe,
            
            /// <summary>
            /// Enum IndianMaldives for "Indian/Maldives"
            /// </summary>
            [EnumMember(Value = "Indian/Maldives")]
            IndianMaldives,
            
            /// <summary>
            /// Enum IndianMauritius for "Indian/Mauritius"
            /// </summary>
            [EnumMember(Value = "Indian/Mauritius")]
            IndianMauritius,
            
            /// <summary>
            /// Enum IndianMayotte for "Indian/Mayotte"
            /// </summary>
            [EnumMember(Value = "Indian/Mayotte")]
            IndianMayotte,
            
            /// <summary>
            /// Enum IndianReunion for "Indian/Reunion"
            /// </summary>
            [EnumMember(Value = "Indian/Reunion")]
            IndianReunion,
            
            /// <summary>
            /// Enum Iran for "Iran"
            /// </summary>
            [EnumMember(Value = "Iran")]
            Iran,
            
            /// <summary>
            /// Enum Israel for "Israel"
            /// </summary>
            [EnumMember(Value = "Israel")]
            Israel,
            
            /// <summary>
            /// Enum Jamaica for "Jamaica"
            /// </summary>
            [EnumMember(Value = "Jamaica")]
            Jamaica,
            
            /// <summary>
            /// Enum Japan for "Japan"
            /// </summary>
            [EnumMember(Value = "Japan")]
            Japan,
            
            /// <summary>
            /// Enum Kwajalein for "Kwajalein"
            /// </summary>
            [EnumMember(Value = "Kwajalein")]
            Kwajalein,
            
            /// <summary>
            /// Enum Libya for "Libya"
            /// </summary>
            [EnumMember(Value = "Libya")]
            Libya,
            
            /// <summary>
            /// Enum MET for "MET"
            /// </summary>
            [EnumMember(Value = "MET")]
            MET,
            
            /// <summary>
            /// Enum MST for "MST"
            /// </summary>
            [EnumMember(Value = "MST")]
            MST,
            
            /// <summary>
            /// Enum MST7MDT for "MST7MDT"
            /// </summary>
            [EnumMember(Value = "MST7MDT")]
            MST7MDT,
            
            /// <summary>
            /// Enum MexicoBajaNorte for "Mexico/BajaNorte"
            /// </summary>
            [EnumMember(Value = "Mexico/BajaNorte")]
            MexicoBajaNorte,
            
            /// <summary>
            /// Enum MexicoBajaSur for "Mexico/BajaSur"
            /// </summary>
            [EnumMember(Value = "Mexico/BajaSur")]
            MexicoBajaSur,
            
            /// <summary>
            /// Enum MexicoGeneral for "Mexico/General"
            /// </summary>
            [EnumMember(Value = "Mexico/General")]
            MexicoGeneral,
            
            /// <summary>
            /// Enum NZ for "NZ"
            /// </summary>
            [EnumMember(Value = "NZ")]
            NZ,
            
            /// <summary>
            /// Enum NZCHAT for "NZ-CHAT"
            /// </summary>
            [EnumMember(Value = "NZ-CHAT")]
            NZCHAT,
            
            /// <summary>
            /// Enum Navajo for "Navajo"
            /// </summary>
            [EnumMember(Value = "Navajo")]
            Navajo,
            
            /// <summary>
            /// Enum PRC for "PRC"
            /// </summary>
            [EnumMember(Value = "PRC")]
            PRC,
            
            /// <summary>
            /// Enum PST8PDT for "PST8PDT"
            /// </summary>
            [EnumMember(Value = "PST8PDT")]
            PST8PDT,
            
            /// <summary>
            /// Enum PacificApia for "Pacific/Apia"
            /// </summary>
            [EnumMember(Value = "Pacific/Apia")]
            PacificApia,
            
            /// <summary>
            /// Enum PacificAuckland for "Pacific/Auckland"
            /// </summary>
            [EnumMember(Value = "Pacific/Auckland")]
            PacificAuckland,
            
            /// <summary>
            /// Enum PacificBougainville for "Pacific/Bougainville"
            /// </summary>
            [EnumMember(Value = "Pacific/Bougainville")]
            PacificBougainville,
            
            /// <summary>
            /// Enum PacificChatham for "Pacific/Chatham"
            /// </summary>
            [EnumMember(Value = "Pacific/Chatham")]
            PacificChatham,
            
            /// <summary>
            /// Enum PacificChuuk for "Pacific/Chuuk"
            /// </summary>
            [EnumMember(Value = "Pacific/Chuuk")]
            PacificChuuk,
            
            /// <summary>
            /// Enum PacificEaster for "Pacific/Easter"
            /// </summary>
            [EnumMember(Value = "Pacific/Easter")]
            PacificEaster,
            
            /// <summary>
            /// Enum PacificEfate for "Pacific/Efate"
            /// </summary>
            [EnumMember(Value = "Pacific/Efate")]
            PacificEfate,
            
            /// <summary>
            /// Enum PacificEnderbury for "Pacific/Enderbury"
            /// </summary>
            [EnumMember(Value = "Pacific/Enderbury")]
            PacificEnderbury,
            
            /// <summary>
            /// Enum PacificFakaofo for "Pacific/Fakaofo"
            /// </summary>
            [EnumMember(Value = "Pacific/Fakaofo")]
            PacificFakaofo,
            
            /// <summary>
            /// Enum PacificFiji for "Pacific/Fiji"
            /// </summary>
            [EnumMember(Value = "Pacific/Fiji")]
            PacificFiji,
            
            /// <summary>
            /// Enum PacificFunafuti for "Pacific/Funafuti"
            /// </summary>
            [EnumMember(Value = "Pacific/Funafuti")]
            PacificFunafuti,
            
            /// <summary>
            /// Enum PacificGalapagos for "Pacific/Galapagos"
            /// </summary>
            [EnumMember(Value = "Pacific/Galapagos")]
            PacificGalapagos,
            
            /// <summary>
            /// Enum PacificGambier for "Pacific/Gambier"
            /// </summary>
            [EnumMember(Value = "Pacific/Gambier")]
            PacificGambier,
            
            /// <summary>
            /// Enum PacificGuadalcanal for "Pacific/Guadalcanal"
            /// </summary>
            [EnumMember(Value = "Pacific/Guadalcanal")]
            PacificGuadalcanal,
            
            /// <summary>
            /// Enum PacificGuam for "Pacific/Guam"
            /// </summary>
            [EnumMember(Value = "Pacific/Guam")]
            PacificGuam,
            
            /// <summary>
            /// Enum PacificHonolulu for "Pacific/Honolulu"
            /// </summary>
            [EnumMember(Value = "Pacific/Honolulu")]
            PacificHonolulu,
            
            /// <summary>
            /// Enum PacificJohnston for "Pacific/Johnston"
            /// </summary>
            [EnumMember(Value = "Pacific/Johnston")]
            PacificJohnston,
            
            /// <summary>
            /// Enum PacificKiritimati for "Pacific/Kiritimati"
            /// </summary>
            [EnumMember(Value = "Pacific/Kiritimati")]
            PacificKiritimati,
            
            /// <summary>
            /// Enum PacificKosrae for "Pacific/Kosrae"
            /// </summary>
            [EnumMember(Value = "Pacific/Kosrae")]
            PacificKosrae,
            
            /// <summary>
            /// Enum PacificKwajalein for "Pacific/Kwajalein"
            /// </summary>
            [EnumMember(Value = "Pacific/Kwajalein")]
            PacificKwajalein,
            
            /// <summary>
            /// Enum PacificMajuro for "Pacific/Majuro"
            /// </summary>
            [EnumMember(Value = "Pacific/Majuro")]
            PacificMajuro,
            
            /// <summary>
            /// Enum PacificMarquesas for "Pacific/Marquesas"
            /// </summary>
            [EnumMember(Value = "Pacific/Marquesas")]
            PacificMarquesas,
            
            /// <summary>
            /// Enum PacificMidway for "Pacific/Midway"
            /// </summary>
            [EnumMember(Value = "Pacific/Midway")]
            PacificMidway,
            
            /// <summary>
            /// Enum PacificNauru for "Pacific/Nauru"
            /// </summary>
            [EnumMember(Value = "Pacific/Nauru")]
            PacificNauru,
            
            /// <summary>
            /// Enum PacificNiue for "Pacific/Niue"
            /// </summary>
            [EnumMember(Value = "Pacific/Niue")]
            PacificNiue,
            
            /// <summary>
            /// Enum PacificNorfolk for "Pacific/Norfolk"
            /// </summary>
            [EnumMember(Value = "Pacific/Norfolk")]
            PacificNorfolk,
            
            /// <summary>
            /// Enum PacificNoumea for "Pacific/Noumea"
            /// </summary>
            [EnumMember(Value = "Pacific/Noumea")]
            PacificNoumea,
            
            /// <summary>
            /// Enum PacificPagoPago for "Pacific/Pago_Pago"
            /// </summary>
            [EnumMember(Value = "Pacific/Pago_Pago")]
            PacificPagoPago,
            
            /// <summary>
            /// Enum PacificPalau for "Pacific/Palau"
            /// </summary>
            [EnumMember(Value = "Pacific/Palau")]
            PacificPalau,
            
            /// <summary>
            /// Enum PacificPitcairn for "Pacific/Pitcairn"
            /// </summary>
            [EnumMember(Value = "Pacific/Pitcairn")]
            PacificPitcairn,
            
            /// <summary>
            /// Enum PacificPohnpei for "Pacific/Pohnpei"
            /// </summary>
            [EnumMember(Value = "Pacific/Pohnpei")]
            PacificPohnpei,
            
            /// <summary>
            /// Enum PacificPonape for "Pacific/Ponape"
            /// </summary>
            [EnumMember(Value = "Pacific/Ponape")]
            PacificPonape,
            
            /// <summary>
            /// Enum PacificPortMoresby for "Pacific/Port_Moresby"
            /// </summary>
            [EnumMember(Value = "Pacific/Port_Moresby")]
            PacificPortMoresby,
            
            /// <summary>
            /// Enum PacificRarotonga for "Pacific/Rarotonga"
            /// </summary>
            [EnumMember(Value = "Pacific/Rarotonga")]
            PacificRarotonga,
            
            /// <summary>
            /// Enum PacificSaipan for "Pacific/Saipan"
            /// </summary>
            [EnumMember(Value = "Pacific/Saipan")]
            PacificSaipan,
            
            /// <summary>
            /// Enum PacificSamoa for "Pacific/Samoa"
            /// </summary>
            [EnumMember(Value = "Pacific/Samoa")]
            PacificSamoa,
            
            /// <summary>
            /// Enum PacificTahiti for "Pacific/Tahiti"
            /// </summary>
            [EnumMember(Value = "Pacific/Tahiti")]
            PacificTahiti,
            
            /// <summary>
            /// Enum PacificTarawa for "Pacific/Tarawa"
            /// </summary>
            [EnumMember(Value = "Pacific/Tarawa")]
            PacificTarawa,
            
            /// <summary>
            /// Enum PacificTongatapu for "Pacific/Tongatapu"
            /// </summary>
            [EnumMember(Value = "Pacific/Tongatapu")]
            PacificTongatapu,
            
            /// <summary>
            /// Enum PacificTruk for "Pacific/Truk"
            /// </summary>
            [EnumMember(Value = "Pacific/Truk")]
            PacificTruk,
            
            /// <summary>
            /// Enum PacificWake for "Pacific/Wake"
            /// </summary>
            [EnumMember(Value = "Pacific/Wake")]
            PacificWake,
            
            /// <summary>
            /// Enum PacificWallis for "Pacific/Wallis"
            /// </summary>
            [EnumMember(Value = "Pacific/Wallis")]
            PacificWallis,
            
            /// <summary>
            /// Enum PacificYap for "Pacific/Yap"
            /// </summary>
            [EnumMember(Value = "Pacific/Yap")]
            PacificYap,
            
            /// <summary>
            /// Enum Poland for "Poland"
            /// </summary>
            [EnumMember(Value = "Poland")]
            Poland,
            
            /// <summary>
            /// Enum Portugal for "Portugal"
            /// </summary>
            [EnumMember(Value = "Portugal")]
            Portugal,
            
            /// <summary>
            /// Enum ROC for "ROC"
            /// </summary>
            [EnumMember(Value = "ROC")]
            ROC,
            
            /// <summary>
            /// Enum ROK for "ROK"
            /// </summary>
            [EnumMember(Value = "ROK")]
            ROK,
            
            /// <summary>
            /// Enum Singapore for "Singapore"
            /// </summary>
            [EnumMember(Value = "Singapore")]
            Singapore,
            
            /// <summary>
            /// Enum Turkey for "Turkey"
            /// </summary>
            [EnumMember(Value = "Turkey")]
            Turkey,
            
            /// <summary>
            /// Enum UCT for "UCT"
            /// </summary>
            [EnumMember(Value = "UCT")]
            UCT,
            
            /// <summary>
            /// Enum USAlaska for "US/Alaska"
            /// </summary>
            [EnumMember(Value = "US/Alaska")]
            USAlaska,
            
            /// <summary>
            /// Enum USAleutian for "US/Aleutian"
            /// </summary>
            [EnumMember(Value = "US/Aleutian")]
            USAleutian,
            
            /// <summary>
            /// Enum USArizona for "US/Arizona"
            /// </summary>
            [EnumMember(Value = "US/Arizona")]
            USArizona,
            
            /// <summary>
            /// Enum USCentral for "US/Central"
            /// </summary>
            [EnumMember(Value = "US/Central")]
            USCentral,
            
            /// <summary>
            /// Enum USEastIndiana for "US/East-Indiana"
            /// </summary>
            [EnumMember(Value = "US/East-Indiana")]
            USEastIndiana,
            
            /// <summary>
            /// Enum USEastern for "US/Eastern"
            /// </summary>
            [EnumMember(Value = "US/Eastern")]
            USEastern,
            
            /// <summary>
            /// Enum USHawaii for "US/Hawaii"
            /// </summary>
            [EnumMember(Value = "US/Hawaii")]
            USHawaii,
            
            /// <summary>
            /// Enum USIndianaStarke for "US/Indiana-Starke"
            /// </summary>
            [EnumMember(Value = "US/Indiana-Starke")]
            USIndianaStarke,
            
            /// <summary>
            /// Enum USMichigan for "US/Michigan"
            /// </summary>
            [EnumMember(Value = "US/Michigan")]
            USMichigan,
            
            /// <summary>
            /// Enum USMountain for "US/Mountain"
            /// </summary>
            [EnumMember(Value = "US/Mountain")]
            USMountain,
            
            /// <summary>
            /// Enum USPacific for "US/Pacific"
            /// </summary>
            [EnumMember(Value = "US/Pacific")]
            USPacific,
            
            /// <summary>
            /// Enum USPacificNew for "US/Pacific-New"
            /// </summary>
            [EnumMember(Value = "US/Pacific-New")]
            USPacificNew,
            
            /// <summary>
            /// Enum USSamoa for "US/Samoa"
            /// </summary>
            [EnumMember(Value = "US/Samoa")]
            USSamoa,
            
            /// <summary>
            /// Enum UTC for "UTC"
            /// </summary>
            [EnumMember(Value = "UTC")]
            UTC,
            
            /// <summary>
            /// Enum Universal for "Universal"
            /// </summary>
            [EnumMember(Value = "Universal")]
            Universal,
            
            /// <summary>
            /// Enum WSU for "W-SU"
            /// </summary>
            [EnumMember(Value = "W-SU")]
            WSU,
            
            /// <summary>
            /// Enum WET for "WET"
            /// </summary>
            [EnumMember(Value = "WET")]
            WET,
            
            /// <summary>
            /// Enum Zulu for "Zulu"
            /// </summary>
            [EnumMember(Value = "Zulu")]
            Zulu
        }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="language", EmitDefaultValue=false)]
        public LanguageEnum? Language { get; set; }
        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name="timezone", EmitDefaultValue=false)]
        public TimezoneEnum? Timezone { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TeamMember" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TeamMember() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TeamMember" /> class.
        /// </summary>
        /// <param name="Roles">Roles (required).</param>
        /// <param name="PreviousRoles">PreviousRoles.</param>
        /// <param name="Position">Position.</param>
        /// <param name="OfficePhone">OfficePhone.</param>
        /// <param name="MobilePhone">MobilePhone.</param>
        /// <param name="Website">Website.</param>
        /// <param name="AddressCity">AddressCity.</param>
        /// <param name="AddressCountry">AddressCountry.</param>
        /// <param name="AddressLine1">AddressLine1.</param>
        /// <param name="AddressLine2">AddressLine2.</param>
        /// <param name="AddressState">AddressState.</param>
        /// <param name="AddressZip">AddressZip.</param>
        /// <param name="Language">Language.</param>
        /// <param name="Timezone">Timezone.</param>
        /// <param name="Created">Created.</param>
        /// <param name="Modified">Modified.</param>
        /// <param name="Email">Email.</param>
        /// <param name="Key">Key.</param>
        /// <param name="TeamDataRecordId">TeamDataRecordId.</param>
        /// <param name="Id">Id.</param>
        /// <param name="CustomerId">CustomerId.</param>
        /// <param name="TeamId">TeamId.</param>
        /// <param name="Customer">Customer.</param>
        /// <param name="Team">Team.</param>
        /// <param name="Portals">Portals.</param>
        /// <param name="UploadedTemplates">UploadedTemplates.</param>
        /// <param name="Templates">Templates.</param>
        /// <param name="InvitationTickets">InvitationTickets.</param>
        /// <param name="RequestedDesigns">RequestedDesigns.</param>
        /// <param name="RequestedDesignExports">RequestedDesignExports.</param>
        /// <param name="AssignedDesigns">AssignedDesigns.</param>
        /// <param name="ReviewedDesigns">ReviewedDesigns.</param>
        /// <param name="CommentedDesigns">CommentedDesigns.</param>
        /// <param name="DesignComments">DesignComments.</param>
        /// <param name="DesignFolders">DesignFolders.</param>
        /// <param name="SharedDesigns">SharedDesigns.</param>
        /// <param name="DesignShares">DesignShares.</param>
        /// <param name="Workflows">Workflows.</param>
        /// <param name="ImageFolders">ImageFolders.</param>
        /// <param name="Notifications">Notifications.</param>
        public TeamMember(List<string> Roles = null, List<string> PreviousRoles = null, string Position = null, string OfficePhone = null, string MobilePhone = null, string Website = null, string AddressCity = null, string AddressCountry = null, string AddressLine1 = null, string AddressLine2 = null, string AddressState = null, string AddressZip = null, LanguageEnum? Language = null, TimezoneEnum? Timezone = null, DateTime? Created = null, DateTime? Modified = null, string Email = null, string Key = null, string TeamDataRecordId = null, string Id = null, string CustomerId = null, string TeamId = null, Customer Customer = null, Team Team = null, List<Portal> Portals = null, List<Template> UploadedTemplates = null, List<Template> Templates = null, List<InvitationTicket> InvitationTickets = null, List<Design> RequestedDesigns = null, List<DesignExport> RequestedDesignExports = null, List<Design> AssignedDesigns = null, List<Design> ReviewedDesigns = null, List<Design> CommentedDesigns = null, List<DesignComment> DesignComments = null, List<DesignFolder> DesignFolders = null, List<Design> SharedDesigns = null, List<DesignMember> DesignShares = null, List<Workflow> Workflows = null, List<ImageFolder> ImageFolders = null, List<Notification> Notifications = null)
        {
            // to ensure "Roles" is required (not null)
            if (Roles == null)
            {
                throw new InvalidDataException("Roles is a required property for TeamMember and cannot be null");
            }
            else
            {
                this.Roles = Roles;
            }
            this.PreviousRoles = PreviousRoles;
            this.Position = Position;
            this.OfficePhone = OfficePhone;
            this.MobilePhone = MobilePhone;
            this.Website = Website;
            this.AddressCity = AddressCity;
            this.AddressCountry = AddressCountry;
            this.AddressLine1 = AddressLine1;
            this.AddressLine2 = AddressLine2;
            this.AddressState = AddressState;
            this.AddressZip = AddressZip;
            this.Language = Language;
            this.Timezone = Timezone;
            this.Created = Created;
            this.Modified = Modified;
            this.Email = Email;
            this.Key = Key;
            this.TeamDataRecordId = TeamDataRecordId;
            this.Id = Id;
            this.CustomerId = CustomerId;
            this.TeamId = TeamId;
            this.Customer = Customer;
            this.Team = Team;
            this.Portals = Portals;
            this.UploadedTemplates = UploadedTemplates;
            this.Templates = Templates;
            this.InvitationTickets = InvitationTickets;
            this.RequestedDesigns = RequestedDesigns;
            this.RequestedDesignExports = RequestedDesignExports;
            this.AssignedDesigns = AssignedDesigns;
            this.ReviewedDesigns = ReviewedDesigns;
            this.CommentedDesigns = CommentedDesigns;
            this.DesignComments = DesignComments;
            this.DesignFolders = DesignFolders;
            this.SharedDesigns = SharedDesigns;
            this.DesignShares = DesignShares;
            this.Workflows = Workflows;
            this.ImageFolders = ImageFolders;
            this.Notifications = Notifications;
        }
        
        /// <summary>
        /// Gets or Sets Roles
        /// </summary>
        [DataMember(Name="roles", EmitDefaultValue=false)]
        public List<string> Roles { get; set; }
        /// <summary>
        /// Gets or Sets PreviousRoles
        /// </summary>
        [DataMember(Name="previousRoles", EmitDefaultValue=false)]
        public List<string> PreviousRoles { get; set; }
        /// <summary>
        /// Gets or Sets Position
        /// </summary>
        [DataMember(Name="position", EmitDefaultValue=false)]
        public string Position { get; set; }
        /// <summary>
        /// Gets or Sets OfficePhone
        /// </summary>
        [DataMember(Name="officePhone", EmitDefaultValue=false)]
        public string OfficePhone { get; set; }
        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobilePhone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }
        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }
        /// <summary>
        /// Gets or Sets AddressCity
        /// </summary>
        [DataMember(Name="addressCity", EmitDefaultValue=false)]
        public string AddressCity { get; set; }
        /// <summary>
        /// Gets or Sets AddressCountry
        /// </summary>
        [DataMember(Name="addressCountry", EmitDefaultValue=false)]
        public string AddressCountry { get; set; }
        /// <summary>
        /// Gets or Sets AddressLine1
        /// </summary>
        [DataMember(Name="addressLine1", EmitDefaultValue=false)]
        public string AddressLine1 { get; set; }
        /// <summary>
        /// Gets or Sets AddressLine2
        /// </summary>
        [DataMember(Name="addressLine2", EmitDefaultValue=false)]
        public string AddressLine2 { get; set; }
        /// <summary>
        /// Gets or Sets AddressState
        /// </summary>
        [DataMember(Name="addressState", EmitDefaultValue=false)]
        public string AddressState { get; set; }
        /// <summary>
        /// Gets or Sets AddressZip
        /// </summary>
        [DataMember(Name="addressZip", EmitDefaultValue=false)]
        public string AddressZip { get; set; }
        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name="created", EmitDefaultValue=false)]
        public DateTime? Created { get; set; }
        /// <summary>
        /// Gets or Sets Modified
        /// </summary>
        [DataMember(Name="modified", EmitDefaultValue=false)]
        public DateTime? Modified { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }
        /// <summary>
        /// Gets or Sets Key
        /// </summary>
        [DataMember(Name="key", EmitDefaultValue=false)]
        public string Key { get; set; }
        /// <summary>
        /// Gets or Sets TeamDataRecordId
        /// </summary>
        [DataMember(Name="teamDataRecordId", EmitDefaultValue=false)]
        public string TeamDataRecordId { get; set; }
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }
        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name="customerId", EmitDefaultValue=false)]
        public string CustomerId { get; set; }
        /// <summary>
        /// Gets or Sets TeamId
        /// </summary>
        [DataMember(Name="teamId", EmitDefaultValue=false)]
        public string TeamId { get; set; }
        /// <summary>
        /// Gets or Sets Customer
        /// </summary>
        [DataMember(Name="customer", EmitDefaultValue=false)]
        public Customer Customer { get; set; }
        /// <summary>
        /// Gets or Sets Team
        /// </summary>
        [DataMember(Name="team", EmitDefaultValue=false)]
        public Team Team { get; set; }
        /// <summary>
        /// Gets or Sets Portals
        /// </summary>
        [DataMember(Name="portals", EmitDefaultValue=false)]
        public List<Portal> Portals { get; set; }
        /// <summary>
        /// Gets or Sets UploadedTemplates
        /// </summary>
        [DataMember(Name="uploadedTemplates", EmitDefaultValue=false)]
        public List<Template> UploadedTemplates { get; set; }
        /// <summary>
        /// Gets or Sets Templates
        /// </summary>
        [DataMember(Name="templates", EmitDefaultValue=false)]
        public List<Template> Templates { get; set; }
        /// <summary>
        /// Gets or Sets InvitationTickets
        /// </summary>
        [DataMember(Name="invitationTickets", EmitDefaultValue=false)]
        public List<InvitationTicket> InvitationTickets { get; set; }
        /// <summary>
        /// Gets or Sets RequestedDesigns
        /// </summary>
        [DataMember(Name="requestedDesigns", EmitDefaultValue=false)]
        public List<Design> RequestedDesigns { get; set; }
        /// <summary>
        /// Gets or Sets RequestedDesignExports
        /// </summary>
        [DataMember(Name="requestedDesignExports", EmitDefaultValue=false)]
        public List<DesignExport> RequestedDesignExports { get; set; }
        /// <summary>
        /// Gets or Sets AssignedDesigns
        /// </summary>
        [DataMember(Name="assignedDesigns", EmitDefaultValue=false)]
        public List<Design> AssignedDesigns { get; set; }
        /// <summary>
        /// Gets or Sets ReviewedDesigns
        /// </summary>
        [DataMember(Name="reviewedDesigns", EmitDefaultValue=false)]
        public List<Design> ReviewedDesigns { get; set; }
        /// <summary>
        /// Gets or Sets CommentedDesigns
        /// </summary>
        [DataMember(Name="commentedDesigns", EmitDefaultValue=false)]
        public List<Design> CommentedDesigns { get; set; }
        /// <summary>
        /// Gets or Sets DesignComments
        /// </summary>
        [DataMember(Name="designComments", EmitDefaultValue=false)]
        public List<DesignComment> DesignComments { get; set; }
        /// <summary>
        /// Gets or Sets DesignFolders
        /// </summary>
        [DataMember(Name="designFolders", EmitDefaultValue=false)]
        public List<DesignFolder> DesignFolders { get; set; }
        /// <summary>
        /// Gets or Sets SharedDesigns
        /// </summary>
        [DataMember(Name="sharedDesigns", EmitDefaultValue=false)]
        public List<Design> SharedDesigns { get; set; }
        /// <summary>
        /// Gets or Sets DesignShares
        /// </summary>
        [DataMember(Name="designShares", EmitDefaultValue=false)]
        public List<DesignMember> DesignShares { get; set; }
        /// <summary>
        /// Gets or Sets Workflows
        /// </summary>
        [DataMember(Name="workflows", EmitDefaultValue=false)]
        public List<Workflow> Workflows { get; set; }
        /// <summary>
        /// Gets or Sets ImageFolders
        /// </summary>
        [DataMember(Name="imageFolders", EmitDefaultValue=false)]
        public List<ImageFolder> ImageFolders { get; set; }
        /// <summary>
        /// Gets or Sets Notifications
        /// </summary>
        [DataMember(Name="notifications", EmitDefaultValue=false)]
        public List<Notification> Notifications { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TeamMember {\n");
            sb.Append("  Roles: ").Append(Roles).Append("\n");
            sb.Append("  PreviousRoles: ").Append(PreviousRoles).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  OfficePhone: ").Append(OfficePhone).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  AddressCity: ").Append(AddressCity).Append("\n");
            sb.Append("  AddressCountry: ").Append(AddressCountry).Append("\n");
            sb.Append("  AddressLine1: ").Append(AddressLine1).Append("\n");
            sb.Append("  AddressLine2: ").Append(AddressLine2).Append("\n");
            sb.Append("  AddressState: ").Append(AddressState).Append("\n");
            sb.Append("  AddressZip: ").Append(AddressZip).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  Modified: ").Append(Modified).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  TeamDataRecordId: ").Append(TeamDataRecordId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  TeamId: ").Append(TeamId).Append("\n");
            sb.Append("  Customer: ").Append(Customer).Append("\n");
            sb.Append("  Team: ").Append(Team).Append("\n");
            sb.Append("  Portals: ").Append(Portals).Append("\n");
            sb.Append("  UploadedTemplates: ").Append(UploadedTemplates).Append("\n");
            sb.Append("  Templates: ").Append(Templates).Append("\n");
            sb.Append("  InvitationTickets: ").Append(InvitationTickets).Append("\n");
            sb.Append("  RequestedDesigns: ").Append(RequestedDesigns).Append("\n");
            sb.Append("  RequestedDesignExports: ").Append(RequestedDesignExports).Append("\n");
            sb.Append("  AssignedDesigns: ").Append(AssignedDesigns).Append("\n");
            sb.Append("  ReviewedDesigns: ").Append(ReviewedDesigns).Append("\n");
            sb.Append("  CommentedDesigns: ").Append(CommentedDesigns).Append("\n");
            sb.Append("  DesignComments: ").Append(DesignComments).Append("\n");
            sb.Append("  DesignFolders: ").Append(DesignFolders).Append("\n");
            sb.Append("  SharedDesigns: ").Append(SharedDesigns).Append("\n");
            sb.Append("  DesignShares: ").Append(DesignShares).Append("\n");
            sb.Append("  Workflows: ").Append(Workflows).Append("\n");
            sb.Append("  ImageFolders: ").Append(ImageFolders).Append("\n");
            sb.Append("  Notifications: ").Append(Notifications).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as TeamMember);
        }

        /// <summary>
        /// Returns true if TeamMember instances are equal
        /// </summary>
        /// <param name="other">Instance of TeamMember to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TeamMember other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Roles == other.Roles ||
                    this.Roles != null &&
                    this.Roles.SequenceEqual(other.Roles)
                ) && 
                (
                    this.PreviousRoles == other.PreviousRoles ||
                    this.PreviousRoles != null &&
                    this.PreviousRoles.SequenceEqual(other.PreviousRoles)
                ) && 
                (
                    this.Position == other.Position ||
                    this.Position != null &&
                    this.Position.Equals(other.Position)
                ) && 
                (
                    this.OfficePhone == other.OfficePhone ||
                    this.OfficePhone != null &&
                    this.OfficePhone.Equals(other.OfficePhone)
                ) && 
                (
                    this.MobilePhone == other.MobilePhone ||
                    this.MobilePhone != null &&
                    this.MobilePhone.Equals(other.MobilePhone)
                ) && 
                (
                    this.Website == other.Website ||
                    this.Website != null &&
                    this.Website.Equals(other.Website)
                ) && 
                (
                    this.AddressCity == other.AddressCity ||
                    this.AddressCity != null &&
                    this.AddressCity.Equals(other.AddressCity)
                ) && 
                (
                    this.AddressCountry == other.AddressCountry ||
                    this.AddressCountry != null &&
                    this.AddressCountry.Equals(other.AddressCountry)
                ) && 
                (
                    this.AddressLine1 == other.AddressLine1 ||
                    this.AddressLine1 != null &&
                    this.AddressLine1.Equals(other.AddressLine1)
                ) && 
                (
                    this.AddressLine2 == other.AddressLine2 ||
                    this.AddressLine2 != null &&
                    this.AddressLine2.Equals(other.AddressLine2)
                ) && 
                (
                    this.AddressState == other.AddressState ||
                    this.AddressState != null &&
                    this.AddressState.Equals(other.AddressState)
                ) && 
                (
                    this.AddressZip == other.AddressZip ||
                    this.AddressZip != null &&
                    this.AddressZip.Equals(other.AddressZip)
                ) && 
                (
                    this.Language == other.Language ||
                    this.Language != null &&
                    this.Language.Equals(other.Language)
                ) && 
                (
                    this.Timezone == other.Timezone ||
                    this.Timezone != null &&
                    this.Timezone.Equals(other.Timezone)
                ) && 
                (
                    this.Created == other.Created ||
                    this.Created != null &&
                    this.Created.Equals(other.Created)
                ) && 
                (
                    this.Modified == other.Modified ||
                    this.Modified != null &&
                    this.Modified.Equals(other.Modified)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.Key == other.Key ||
                    this.Key != null &&
                    this.Key.Equals(other.Key)
                ) && 
                (
                    this.TeamDataRecordId == other.TeamDataRecordId ||
                    this.TeamDataRecordId != null &&
                    this.TeamDataRecordId.Equals(other.TeamDataRecordId)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.CustomerId == other.CustomerId ||
                    this.CustomerId != null &&
                    this.CustomerId.Equals(other.CustomerId)
                ) && 
                (
                    this.TeamId == other.TeamId ||
                    this.TeamId != null &&
                    this.TeamId.Equals(other.TeamId)
                ) && 
                (
                    this.Customer == other.Customer ||
                    this.Customer != null &&
                    this.Customer.Equals(other.Customer)
                ) && 
                (
                    this.Team == other.Team ||
                    this.Team != null &&
                    this.Team.Equals(other.Team)
                ) && 
                (
                    this.Portals == other.Portals ||
                    this.Portals != null &&
                    this.Portals.SequenceEqual(other.Portals)
                ) && 
                (
                    this.UploadedTemplates == other.UploadedTemplates ||
                    this.UploadedTemplates != null &&
                    this.UploadedTemplates.SequenceEqual(other.UploadedTemplates)
                ) && 
                (
                    this.Templates == other.Templates ||
                    this.Templates != null &&
                    this.Templates.SequenceEqual(other.Templates)
                ) && 
                (
                    this.InvitationTickets == other.InvitationTickets ||
                    this.InvitationTickets != null &&
                    this.InvitationTickets.SequenceEqual(other.InvitationTickets)
                ) && 
                (
                    this.RequestedDesigns == other.RequestedDesigns ||
                    this.RequestedDesigns != null &&
                    this.RequestedDesigns.SequenceEqual(other.RequestedDesigns)
                ) && 
                (
                    this.RequestedDesignExports == other.RequestedDesignExports ||
                    this.RequestedDesignExports != null &&
                    this.RequestedDesignExports.SequenceEqual(other.RequestedDesignExports)
                ) && 
                (
                    this.AssignedDesigns == other.AssignedDesigns ||
                    this.AssignedDesigns != null &&
                    this.AssignedDesigns.SequenceEqual(other.AssignedDesigns)
                ) && 
                (
                    this.ReviewedDesigns == other.ReviewedDesigns ||
                    this.ReviewedDesigns != null &&
                    this.ReviewedDesigns.SequenceEqual(other.ReviewedDesigns)
                ) && 
                (
                    this.CommentedDesigns == other.CommentedDesigns ||
                    this.CommentedDesigns != null &&
                    this.CommentedDesigns.SequenceEqual(other.CommentedDesigns)
                ) && 
                (
                    this.DesignComments == other.DesignComments ||
                    this.DesignComments != null &&
                    this.DesignComments.SequenceEqual(other.DesignComments)
                ) && 
                (
                    this.DesignFolders == other.DesignFolders ||
                    this.DesignFolders != null &&
                    this.DesignFolders.SequenceEqual(other.DesignFolders)
                ) && 
                (
                    this.SharedDesigns == other.SharedDesigns ||
                    this.SharedDesigns != null &&
                    this.SharedDesigns.SequenceEqual(other.SharedDesigns)
                ) && 
                (
                    this.DesignShares == other.DesignShares ||
                    this.DesignShares != null &&
                    this.DesignShares.SequenceEqual(other.DesignShares)
                ) && 
                (
                    this.Workflows == other.Workflows ||
                    this.Workflows != null &&
                    this.Workflows.SequenceEqual(other.Workflows)
                ) && 
                (
                    this.ImageFolders == other.ImageFolders ||
                    this.ImageFolders != null &&
                    this.ImageFolders.SequenceEqual(other.ImageFolders)
                ) && 
                (
                    this.Notifications == other.Notifications ||
                    this.Notifications != null &&
                    this.Notifications.SequenceEqual(other.Notifications)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Roles != null)
                    hash = hash * 59 + this.Roles.GetHashCode();
                if (this.PreviousRoles != null)
                    hash = hash * 59 + this.PreviousRoles.GetHashCode();
                if (this.Position != null)
                    hash = hash * 59 + this.Position.GetHashCode();
                if (this.OfficePhone != null)
                    hash = hash * 59 + this.OfficePhone.GetHashCode();
                if (this.MobilePhone != null)
                    hash = hash * 59 + this.MobilePhone.GetHashCode();
                if (this.Website != null)
                    hash = hash * 59 + this.Website.GetHashCode();
                if (this.AddressCity != null)
                    hash = hash * 59 + this.AddressCity.GetHashCode();
                if (this.AddressCountry != null)
                    hash = hash * 59 + this.AddressCountry.GetHashCode();
                if (this.AddressLine1 != null)
                    hash = hash * 59 + this.AddressLine1.GetHashCode();
                if (this.AddressLine2 != null)
                    hash = hash * 59 + this.AddressLine2.GetHashCode();
                if (this.AddressState != null)
                    hash = hash * 59 + this.AddressState.GetHashCode();
                if (this.AddressZip != null)
                    hash = hash * 59 + this.AddressZip.GetHashCode();
                if (this.Language != null)
                    hash = hash * 59 + this.Language.GetHashCode();
                if (this.Timezone != null)
                    hash = hash * 59 + this.Timezone.GetHashCode();
                if (this.Created != null)
                    hash = hash * 59 + this.Created.GetHashCode();
                if (this.Modified != null)
                    hash = hash * 59 + this.Modified.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.Key != null)
                    hash = hash * 59 + this.Key.GetHashCode();
                if (this.TeamDataRecordId != null)
                    hash = hash * 59 + this.TeamDataRecordId.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.CustomerId != null)
                    hash = hash * 59 + this.CustomerId.GetHashCode();
                if (this.TeamId != null)
                    hash = hash * 59 + this.TeamId.GetHashCode();
                if (this.Customer != null)
                    hash = hash * 59 + this.Customer.GetHashCode();
                if (this.Team != null)
                    hash = hash * 59 + this.Team.GetHashCode();
                if (this.Portals != null)
                    hash = hash * 59 + this.Portals.GetHashCode();
                if (this.UploadedTemplates != null)
                    hash = hash * 59 + this.UploadedTemplates.GetHashCode();
                if (this.Templates != null)
                    hash = hash * 59 + this.Templates.GetHashCode();
                if (this.InvitationTickets != null)
                    hash = hash * 59 + this.InvitationTickets.GetHashCode();
                if (this.RequestedDesigns != null)
                    hash = hash * 59 + this.RequestedDesigns.GetHashCode();
                if (this.RequestedDesignExports != null)
                    hash = hash * 59 + this.RequestedDesignExports.GetHashCode();
                if (this.AssignedDesigns != null)
                    hash = hash * 59 + this.AssignedDesigns.GetHashCode();
                if (this.ReviewedDesigns != null)
                    hash = hash * 59 + this.ReviewedDesigns.GetHashCode();
                if (this.CommentedDesigns != null)
                    hash = hash * 59 + this.CommentedDesigns.GetHashCode();
                if (this.DesignComments != null)
                    hash = hash * 59 + this.DesignComments.GetHashCode();
                if (this.DesignFolders != null)
                    hash = hash * 59 + this.DesignFolders.GetHashCode();
                if (this.SharedDesigns != null)
                    hash = hash * 59 + this.SharedDesigns.GetHashCode();
                if (this.DesignShares != null)
                    hash = hash * 59 + this.DesignShares.GetHashCode();
                if (this.Workflows != null)
                    hash = hash * 59 + this.Workflows.GetHashCode();
                if (this.ImageFolders != null)
                    hash = hash * 59 + this.ImageFolders.GetHashCode();
                if (this.Notifications != null)
                    hash = hash * 59 + this.Notifications.GetHashCode();
                return hash;
            }
        }
    }

}
