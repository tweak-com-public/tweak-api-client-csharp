/* 
 * tweak-api
 *
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.4-alpha.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using TweakApi.Client;
using TweakApi.Api;
using TweakApi.Model;

namespace TweakApi.Test
{
    /// <summary>
    ///  Class for testing TeamBuilderConfigProductSizeMaterialApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TeamBuilderConfigProductSizeMaterialApiTests
    {
        private TeamBuilderConfigProductSizeMaterialApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TeamBuilderConfigProductSizeMaterialApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TeamBuilderConfigProductSizeMaterialApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TeamBuilderConfigProductSizeMaterialApi
            //Assert.IsInstanceOfType(typeof(TeamBuilderConfigProductSizeMaterialApi), instance, "instance is a TeamBuilderConfigProductSizeMaterialApi");
        }

        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsChangeStreamGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsChangeStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string options = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsChangeStreamGet(options);
            //Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsChangeStreamPost
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsChangeStreamPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string options = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsChangeStreamPost(options);
            //Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsCountGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsCountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string where = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsCountGet(where);
            //Assert.IsInstanceOf<InlineResponse200> (response, "response is InlineResponse200");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsFindOneGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsFindOneGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsFindOneGet(filter);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsGet(filter);
            //Assert.IsInstanceOf<List<TeamBuilderConfigProductSizeMaterial>> (response, "response is List<TeamBuilderConfigProductSizeMaterial>");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdBuilderConfigGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdBuilderConfigGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //bool? refresh = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdBuilderConfigGet(id, refresh);
            //Assert.IsInstanceOf<TeamBuilderConfig> (response, "response is TeamBuilderConfig");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdDelete
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdDelete(id);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdExistsGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdExistsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdExistsGet(id);
            //Assert.IsInstanceOf<InlineResponse2001> (response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string filter = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdGet(id, filter);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdHead
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdHeadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdHead(id);
            //Assert.IsInstanceOf<InlineResponse2001> (response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdPatch
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdPatch(id, data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdPdfColorProfileGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdPdfColorProfileGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //bool? refresh = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdPdfColorProfileGet(id, refresh);
            //Assert.IsInstanceOf<ProductPdfColorProfile> (response, "response is ProductPdfColorProfile");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdProductSizeMaterialGet
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdProductSizeMaterialGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //bool? refresh = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdProductSizeMaterialGet(id, refresh);
            //Assert.IsInstanceOf<ProductSizeMaterial> (response, "response is ProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdPut
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdPut(id, data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsIdReplacePost
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsIdReplacePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsIdReplacePost(id, data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsPatch
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsPatch(data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsPost
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsPost(data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsPut
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsPut(data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsReplaceOrCreatePost
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsReplaceOrCreatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsReplaceOrCreatePost(data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsUpdatePost
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsUpdatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string where = null;
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsUpdatePost(where, data);
            //Assert.IsInstanceOf<InlineResponse2002> (response, "response is InlineResponse2002");
        }
        
        /// <summary>
        /// Test TeamBuilderConfigProductSizeMaterialsUpsertWithWherePost
        /// </summary>
        [Test]
        public void TeamBuilderConfigProductSizeMaterialsUpsertWithWherePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string where = null;
            //TeamBuilderConfigProductSizeMaterial data = null;
            //var response = instance.TeamBuilderConfigProductSizeMaterialsUpsertWithWherePost(where, data);
            //Assert.IsInstanceOf<TeamBuilderConfigProductSizeMaterial> (response, "response is TeamBuilderConfigProductSizeMaterial");
        }
        
    }

}
